module AdafruitLSM303Accelerometer
open(Vector, Time)

// The ptr here should be a Adafruit_LSM303_Accel_Unified C++ object
type accelerometert = accelerometer(ptr)
alias accelerometerState = { timeState : timerState,
                             latchState : vector<float, 3> }

let state : accelerometerState = {
    timeState := Time:state,
    latchState := Vector:zero()
}

fun begin(accel : accelerometert) : unit = {
    let accelerometer(p) = accel
    #((Adafruit_LSM303_Accel_Unified*) p)->begin();#
}

fun read(accel : accelerometert) : vector<float, 3> = {
    let accelerometer(p) = accel
    let mut x = 0.0
    let mut y = 0.0
    let mut z = 0.0
    #
    sensors_event_t event;
    ((Adafruit_LSM303_Accel_Unified*) p)->getEvent(&event);
    x = event.acceleration.x;
    y = event.acceleration.y;
    z = event.acceleration.z;
    #
    [x, y, z]
}

fun getSignal(updateInterval : uint32,
              acc            : accelerometert,
              inout state    : accelerometerState) : sig<vector<float, 3>> =
    Time:every(updateInterval, inout state.timeState) |>
    Signal:map((t) => read(acc)) |>
    Signal:latch(inout state.latchState)
