module Neopixel
include("<Adafruit_NeoPixel.h>")

// The ptr here should be a Adafruit_NeoPixel object
type neoPixelStrip = neoStrip(ptr)

alias color = { r : uint8, g : uint8, b : uint8, w : uint8 }

fun setPixelColor(n : uint16, c : color, strip : neoPixelStrip) : unit = {
    let neoStrip(p) = strip
    let r = c.r
    let g = c.g
    let b = c.b
    let w = c.w
    #((Adafruit_NeoPixel*) p)->setPixelColor(n, r, g, b, w);#
}

fun makeColor(r : uint8, g : uint8, b : uint8) : color =
    {r := r, g := g, b := b, w := 0u8}

fun getPixelColor(n : uint16, strip : neoPixelStrip) : color = {
    let neoStrip(p) = strip
    let mut numRep : uint32 = 0
    #numRep = ((Adafruit_NeoPixel*) p)->getPixelColor(n);#
    { r := toUInt8(numRep >> 16u32), g := toUInt8(numRep >> 8u32), b := toUInt8(numRep), w := 0u8 }
}

fun setBrightness(level : uint8, strip : neoPixelStrip) : unit = {
    let neoStrip(p) = strip
    #((Adafruit_NeoPixel*) p)->setBrightness(level);#
}

fun getBrightness(strip : neoPixelStrip) : uint8 = {
    let mut ret : uint8 = 0
    let neoStrip(p) = strip
    #ret = ((Adafruit_NeoPixel*) p)->getBrightness();#
    ret
}

fun begin(strip : neoPixelStrip) : unit = {
    let neoStrip(p) = strip
    #((Adafruit_NeoPixel*) p)->begin();#
}

fun show(strip : neoPixelStrip) : unit = {
    let neoStrip(p) = strip
    #((Adafruit_NeoPixel*) p)->show();#
}

fun clear(strip : neoPixelStrip) : unit = {
    let neoStrip(p) = strip
    #((Adafruit_NeoPixel*) p)->clear();#
}

fun canShow(strip : neoPixelStrip) : bool = {
    let neoStrip(p) = strip
    let mut ret = false
    #ret = ((Adafruit_NeoPixel*) p)->canShow();#
    ret
}