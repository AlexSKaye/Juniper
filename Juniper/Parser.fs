// Implementation file for parser generated by fsyacc
module Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Ast
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Text.Parsing.ParseHelpers
# 1 "Juniper\Parser.fsy"


# 10 "Juniper\Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | DOT
  | UNDERSCORE
  | FALSE
  | TRUE
  | UNIT
  | LTHANEQ
  | GTHANEQ
  | LTHAN
  | GTHAN
  | EQUAL
  | NOTEQUAL
  | SEMICOLON
  | COLON
  | TYPE
  | OF
  | CASE
  | TILDE
  | TICK
  | PIPE
  | AMPERSAND
  | OR
  | AND
  | NOT
  | DIVIDE
  | TIMES
  | MINUS
  | PLUS
  | MOD
  | COMMA
  | RCURLYBRACE
  | LCURLYBRACE
  | RBRACK
  | LBRACK
  | RPAREN
  | LPAREN
  | FOR
  | VAR
  | LET
  | DO
  | WHILE
  | ELIF
  | ELSE
  | THEN
  | IF
  | FUN
  | BREAK
  | MODULE
  | EXPORT
  | OPEN
  | END
  | RETURN
  | RECORD
  | STRING of (string)
  | ID of (string)
  | FLOAT of (string)
  | INT of (string)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_DOT
    | TOKEN_UNDERSCORE
    | TOKEN_FALSE
    | TOKEN_TRUE
    | TOKEN_UNIT
    | TOKEN_LTHANEQ
    | TOKEN_GTHANEQ
    | TOKEN_LTHAN
    | TOKEN_GTHAN
    | TOKEN_EQUAL
    | TOKEN_NOTEQUAL
    | TOKEN_SEMICOLON
    | TOKEN_COLON
    | TOKEN_TYPE
    | TOKEN_OF
    | TOKEN_CASE
    | TOKEN_TILDE
    | TOKEN_TICK
    | TOKEN_PIPE
    | TOKEN_AMPERSAND
    | TOKEN_OR
    | TOKEN_AND
    | TOKEN_NOT
    | TOKEN_DIVIDE
    | TOKEN_TIMES
    | TOKEN_MINUS
    | TOKEN_PLUS
    | TOKEN_MOD
    | TOKEN_COMMA
    | TOKEN_RCURLYBRACE
    | TOKEN_LCURLYBRACE
    | TOKEN_RBRACK
    | TOKEN_LBRACK
    | TOKEN_RPAREN
    | TOKEN_LPAREN
    | TOKEN_FOR
    | TOKEN_VAR
    | TOKEN_LET
    | TOKEN_DO
    | TOKEN_WHILE
    | TOKEN_ELIF
    | TOKEN_ELSE
    | TOKEN_THEN
    | TOKEN_IF
    | TOKEN_FUN
    | TOKEN_BREAK
    | TOKEN_MODULE
    | TOKEN_EXPORT
    | TOKEN_OPEN
    | TOKEN_END
    | TOKEN_RETURN
    | TOKEN_RECORD
    | TOKEN_STRING
    | TOKEN_ID
    | TOKEN_FLOAT
    | TOKEN_INT
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startstart
    | NONTERM_start
    | NONTERM_declarationList
    | NONTERM_declaration
    | NONTERM_exports
    | NONTERM_exportsList
    | NONTERM_moduleNameDec
    | NONTERM_fundec
    | NONTERM_funargList
    | NONTERM_tycaplist
    | NONTERM_recorddec
    | NONTERM_recordList
    | NONTERM_uniondec
    | NONTERM_valueConList
    | NONTERM_valueCon
    | NONTERM_expr
    | NONTERM_caseClauseList
    | NONTERM_pattern
    | NONTERM_valConPatternList
    | NONTERM_recPatternList
    | NONTERM_elifList
    | NONTERM_seqExprList
    | NONTERM_callExprList
    | NONTERM_tyexpr
    | NONTERM_nonEmptyTyExprList
    | NONTERM_tyexprList
    | NONTERM_moduleQualifier

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | DOT  -> 1 
  | UNDERSCORE  -> 2 
  | FALSE  -> 3 
  | TRUE  -> 4 
  | UNIT  -> 5 
  | LTHANEQ  -> 6 
  | GTHANEQ  -> 7 
  | LTHAN  -> 8 
  | GTHAN  -> 9 
  | EQUAL  -> 10 
  | NOTEQUAL  -> 11 
  | SEMICOLON  -> 12 
  | COLON  -> 13 
  | TYPE  -> 14 
  | OF  -> 15 
  | CASE  -> 16 
  | TILDE  -> 17 
  | TICK  -> 18 
  | PIPE  -> 19 
  | AMPERSAND  -> 20 
  | OR  -> 21 
  | AND  -> 22 
  | NOT  -> 23 
  | DIVIDE  -> 24 
  | TIMES  -> 25 
  | MINUS  -> 26 
  | PLUS  -> 27 
  | MOD  -> 28 
  | COMMA  -> 29 
  | RCURLYBRACE  -> 30 
  | LCURLYBRACE  -> 31 
  | RBRACK  -> 32 
  | LBRACK  -> 33 
  | RPAREN  -> 34 
  | LPAREN  -> 35 
  | FOR  -> 36 
  | VAR  -> 37 
  | LET  -> 38 
  | DO  -> 39 
  | WHILE  -> 40 
  | ELIF  -> 41 
  | ELSE  -> 42 
  | THEN  -> 43 
  | IF  -> 44 
  | FUN  -> 45 
  | BREAK  -> 46 
  | MODULE  -> 47 
  | EXPORT  -> 48 
  | OPEN  -> 49 
  | END  -> 50 
  | RETURN  -> 51 
  | RECORD  -> 52 
  | STRING _ -> 53 
  | ID _ -> 54 
  | FLOAT _ -> 55 
  | INT _ -> 56 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_DOT 
  | 2 -> TOKEN_UNDERSCORE 
  | 3 -> TOKEN_FALSE 
  | 4 -> TOKEN_TRUE 
  | 5 -> TOKEN_UNIT 
  | 6 -> TOKEN_LTHANEQ 
  | 7 -> TOKEN_GTHANEQ 
  | 8 -> TOKEN_LTHAN 
  | 9 -> TOKEN_GTHAN 
  | 10 -> TOKEN_EQUAL 
  | 11 -> TOKEN_NOTEQUAL 
  | 12 -> TOKEN_SEMICOLON 
  | 13 -> TOKEN_COLON 
  | 14 -> TOKEN_TYPE 
  | 15 -> TOKEN_OF 
  | 16 -> TOKEN_CASE 
  | 17 -> TOKEN_TILDE 
  | 18 -> TOKEN_TICK 
  | 19 -> TOKEN_PIPE 
  | 20 -> TOKEN_AMPERSAND 
  | 21 -> TOKEN_OR 
  | 22 -> TOKEN_AND 
  | 23 -> TOKEN_NOT 
  | 24 -> TOKEN_DIVIDE 
  | 25 -> TOKEN_TIMES 
  | 26 -> TOKEN_MINUS 
  | 27 -> TOKEN_PLUS 
  | 28 -> TOKEN_MOD 
  | 29 -> TOKEN_COMMA 
  | 30 -> TOKEN_RCURLYBRACE 
  | 31 -> TOKEN_LCURLYBRACE 
  | 32 -> TOKEN_RBRACK 
  | 33 -> TOKEN_LBRACK 
  | 34 -> TOKEN_RPAREN 
  | 35 -> TOKEN_LPAREN 
  | 36 -> TOKEN_FOR 
  | 37 -> TOKEN_VAR 
  | 38 -> TOKEN_LET 
  | 39 -> TOKEN_DO 
  | 40 -> TOKEN_WHILE 
  | 41 -> TOKEN_ELIF 
  | 42 -> TOKEN_ELSE 
  | 43 -> TOKEN_THEN 
  | 44 -> TOKEN_IF 
  | 45 -> TOKEN_FUN 
  | 46 -> TOKEN_BREAK 
  | 47 -> TOKEN_MODULE 
  | 48 -> TOKEN_EXPORT 
  | 49 -> TOKEN_OPEN 
  | 50 -> TOKEN_END 
  | 51 -> TOKEN_RETURN 
  | 52 -> TOKEN_RECORD 
  | 53 -> TOKEN_STRING 
  | 54 -> TOKEN_ID 
  | 55 -> TOKEN_FLOAT 
  | 56 -> TOKEN_INT 
  | 59 -> TOKEN_end_of_input
  | 57 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startstart 
    | 1 -> NONTERM_start 
    | 2 -> NONTERM_declarationList 
    | 3 -> NONTERM_declarationList 
    | 4 -> NONTERM_declaration 
    | 5 -> NONTERM_declaration 
    | 6 -> NONTERM_declaration 
    | 7 -> NONTERM_declaration 
    | 8 -> NONTERM_declaration 
    | 9 -> NONTERM_exports 
    | 10 -> NONTERM_exportsList 
    | 11 -> NONTERM_exportsList 
    | 12 -> NONTERM_exportsList 
    | 13 -> NONTERM_moduleNameDec 
    | 14 -> NONTERM_fundec 
    | 15 -> NONTERM_fundec 
    | 16 -> NONTERM_funargList 
    | 17 -> NONTERM_funargList 
    | 18 -> NONTERM_funargList 
    | 19 -> NONTERM_tycaplist 
    | 20 -> NONTERM_tycaplist 
    | 21 -> NONTERM_tycaplist 
    | 22 -> NONTERM_tycaplist 
    | 23 -> NONTERM_recorddec 
    | 24 -> NONTERM_recorddec 
    | 25 -> NONTERM_recordList 
    | 26 -> NONTERM_recordList 
    | 27 -> NONTERM_recordList 
    | 28 -> NONTERM_uniondec 
    | 29 -> NONTERM_uniondec 
    | 30 -> NONTERM_valueConList 
    | 31 -> NONTERM_valueConList 
    | 32 -> NONTERM_valueCon 
    | 33 -> NONTERM_expr 
    | 34 -> NONTERM_expr 
    | 35 -> NONTERM_expr 
    | 36 -> NONTERM_expr 
    | 37 -> NONTERM_expr 
    | 38 -> NONTERM_expr 
    | 39 -> NONTERM_expr 
    | 40 -> NONTERM_expr 
    | 41 -> NONTERM_expr 
    | 42 -> NONTERM_expr 
    | 43 -> NONTERM_expr 
    | 44 -> NONTERM_expr 
    | 45 -> NONTERM_expr 
    | 46 -> NONTERM_expr 
    | 47 -> NONTERM_expr 
    | 48 -> NONTERM_expr 
    | 49 -> NONTERM_expr 
    | 50 -> NONTERM_expr 
    | 51 -> NONTERM_expr 
    | 52 -> NONTERM_expr 
    | 53 -> NONTERM_expr 
    | 54 -> NONTERM_expr 
    | 55 -> NONTERM_expr 
    | 56 -> NONTERM_expr 
    | 57 -> NONTERM_expr 
    | 58 -> NONTERM_expr 
    | 59 -> NONTERM_expr 
    | 60 -> NONTERM_expr 
    | 61 -> NONTERM_expr 
    | 62 -> NONTERM_expr 
    | 63 -> NONTERM_expr 
    | 64 -> NONTERM_expr 
    | 65 -> NONTERM_expr 
    | 66 -> NONTERM_expr 
    | 67 -> NONTERM_expr 
    | 68 -> NONTERM_expr 
    | 69 -> NONTERM_expr 
    | 70 -> NONTERM_expr 
    | 71 -> NONTERM_expr 
    | 72 -> NONTERM_expr 
    | 73 -> NONTERM_expr 
    | 74 -> NONTERM_caseClauseList 
    | 75 -> NONTERM_caseClauseList 
    | 76 -> NONTERM_pattern 
    | 77 -> NONTERM_pattern 
    | 78 -> NONTERM_pattern 
    | 79 -> NONTERM_pattern 
    | 80 -> NONTERM_pattern 
    | 81 -> NONTERM_pattern 
    | 82 -> NONTERM_valConPatternList 
    | 83 -> NONTERM_valConPatternList 
    | 84 -> NONTERM_valConPatternList 
    | 85 -> NONTERM_recPatternList 
    | 86 -> NONTERM_recPatternList 
    | 87 -> NONTERM_recPatternList 
    | 88 -> NONTERM_elifList 
    | 89 -> NONTERM_elifList 
    | 90 -> NONTERM_elifList 
    | 91 -> NONTERM_seqExprList 
    | 92 -> NONTERM_seqExprList 
    | 93 -> NONTERM_callExprList 
    | 94 -> NONTERM_callExprList 
    | 95 -> NONTERM_callExprList 
    | 96 -> NONTERM_tyexpr 
    | 97 -> NONTERM_tyexpr 
    | 98 -> NONTERM_tyexpr 
    | 99 -> NONTERM_tyexpr 
    | 100 -> NONTERM_nonEmptyTyExprList 
    | 101 -> NONTERM_nonEmptyTyExprList 
    | 102 -> NONTERM_tyexprList 
    | 103 -> NONTERM_tyexprList 
    | 104 -> NONTERM_tyexprList 
    | 105 -> NONTERM_moduleQualifier 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 59 
let _fsyacc_tagOfErrorTerminal = 57

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | DOT  -> "DOT" 
  | UNDERSCORE  -> "UNDERSCORE" 
  | FALSE  -> "FALSE" 
  | TRUE  -> "TRUE" 
  | UNIT  -> "UNIT" 
  | LTHANEQ  -> "LTHANEQ" 
  | GTHANEQ  -> "GTHANEQ" 
  | LTHAN  -> "LTHAN" 
  | GTHAN  -> "GTHAN" 
  | EQUAL  -> "EQUAL" 
  | NOTEQUAL  -> "NOTEQUAL" 
  | SEMICOLON  -> "SEMICOLON" 
  | COLON  -> "COLON" 
  | TYPE  -> "TYPE" 
  | OF  -> "OF" 
  | CASE  -> "CASE" 
  | TILDE  -> "TILDE" 
  | TICK  -> "TICK" 
  | PIPE  -> "PIPE" 
  | AMPERSAND  -> "AMPERSAND" 
  | OR  -> "OR" 
  | AND  -> "AND" 
  | NOT  -> "NOT" 
  | DIVIDE  -> "DIVIDE" 
  | TIMES  -> "TIMES" 
  | MINUS  -> "MINUS" 
  | PLUS  -> "PLUS" 
  | MOD  -> "MOD" 
  | COMMA  -> "COMMA" 
  | RCURLYBRACE  -> "RCURLYBRACE" 
  | LCURLYBRACE  -> "LCURLYBRACE" 
  | RBRACK  -> "RBRACK" 
  | LBRACK  -> "LBRACK" 
  | RPAREN  -> "RPAREN" 
  | LPAREN  -> "LPAREN" 
  | FOR  -> "FOR" 
  | VAR  -> "VAR" 
  | LET  -> "LET" 
  | DO  -> "DO" 
  | WHILE  -> "WHILE" 
  | ELIF  -> "ELIF" 
  | ELSE  -> "ELSE" 
  | THEN  -> "THEN" 
  | IF  -> "IF" 
  | FUN  -> "FUN" 
  | BREAK  -> "BREAK" 
  | MODULE  -> "MODULE" 
  | EXPORT  -> "EXPORT" 
  | OPEN  -> "OPEN" 
  | END  -> "END" 
  | RETURN  -> "RETURN" 
  | RECORD  -> "RECORD" 
  | STRING _ -> "STRING" 
  | ID _ -> "ID" 
  | FLOAT _ -> "FLOAT" 
  | INT _ -> "INT" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | UNDERSCORE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | UNIT  -> (null : System.Object) 
  | LTHANEQ  -> (null : System.Object) 
  | GTHANEQ  -> (null : System.Object) 
  | LTHAN  -> (null : System.Object) 
  | GTHAN  -> (null : System.Object) 
  | EQUAL  -> (null : System.Object) 
  | NOTEQUAL  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | TYPE  -> (null : System.Object) 
  | OF  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | TILDE  -> (null : System.Object) 
  | TICK  -> (null : System.Object) 
  | PIPE  -> (null : System.Object) 
  | AMPERSAND  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | DIVIDE  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | RCURLYBRACE  -> (null : System.Object) 
  | LCURLYBRACE  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | VAR  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | ELIF  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | FUN  -> (null : System.Object) 
  | BREAK  -> (null : System.Object) 
  | MODULE  -> (null : System.Object) 
  | EXPORT  -> (null : System.Object) 
  | OPEN  -> (null : System.Object) 
  | END  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | RECORD  -> (null : System.Object) 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 3us; 4us; 2us; 65535us; 0us; 3us; 3us; 3us; 2us; 65535us; 0us; 6us; 3us; 6us; 2us; 65535us; 11us; 12us; 15us; 16us; 2us; 65535us; 0us; 5us; 3us; 5us; 2us; 65535us; 0us; 7us; 3us; 7us; 4us; 65535us; 22us; 23us; 30us; 31us; 37us; 38us; 192us; 193us; 5us; 65535us; 27us; 28us; 41us; 42us; 44us; 45us; 52us; 53us; 117us; 118us; 2us; 65535us; 0us; 8us; 3us; 8us; 3us; 65535us; 49us; 50us; 56us; 57us; 61us; 62us; 2us; 65535us; 0us; 9us; 3us; 9us; 3us; 65535us; 48us; 63us; 55us; 64us; 66us; 67us; 3us; 65535us; 48us; 65us; 55us; 65us; 66us; 65us; 46us; 65535us; 25us; 26us; 33us; 34us; 113us; 112us; 120us; 112us; 123us; 72us; 125us; 111us; 128us; 73us; 129us; 74us; 134us; 75us; 137us; 76us; 140us; 77us; 143us; 78us; 144us; 79us; 146us; 80us; 147us; 81us; 148us; 82us; 149us; 83us; 151us; 84us; 153us; 85us; 156us; 86us; 157us; 87us; 160us; 88us; 163us; 89us; 169us; 90us; 170us; 91us; 171us; 92us; 172us; 93us; 173us; 94us; 174us; 95us; 175us; 96us; 178us; 97us; 182us; 98us; 183us; 99us; 184us; 100us; 185us; 101us; 186us; 102us; 188us; 103us; 189us; 104us; 196us; 105us; 199us; 106us; 205us; 107us; 225us; 108us; 227us; 109us; 228us; 110us; 231us; 111us; 233us; 112us; 2us; 65535us; 180us; 206us; 200us; 201us; 5us; 65535us; 180us; 203us; 200us; 203us; 211us; 217us; 218us; 217us; 221us; 222us; 2us; 65535us; 211us; 212us; 218us; 219us; 2us; 65535us; 214us; 215us; 223us; 224us; 2us; 65535us; 74us; 131us; 110us; 230us; 2us; 65535us; 125us; 126us; 231us; 232us; 3us; 65535us; 113us; 114us; 120us; 121us; 233us; 234us; 18us; 65535us; 19us; 20us; 22us; 35us; 30us; 35us; 37us; 35us; 49us; 59us; 56us; 59us; 61us; 59us; 69us; 252us; 132us; 135us; 138us; 141us; 190us; 191us; 192us; 35us; 236us; 249us; 240us; 249us; 243us; 252us; 247us; 248us; 250us; 249us; 253us; 252us; 3us; 65535us; 236us; 237us; 240us; 241us; 250us; 251us; 3us; 65535us; 69us; 70us; 243us; 244us; 253us; 254us; 64us; 65535us; 19us; 235us; 22us; 235us; 25us; 159us; 30us; 235us; 33us; 159us; 37us; 235us; 49us; 235us; 56us; 235us; 61us; 235us; 69us; 235us; 113us; 159us; 120us; 159us; 123us; 159us; 125us; 159us; 128us; 159us; 129us; 159us; 132us; 235us; 134us; 159us; 137us; 159us; 138us; 235us; 140us; 159us; 143us; 159us; 144us; 159us; 146us; 159us; 147us; 159us; 148us; 159us; 149us; 159us; 151us; 159us; 153us; 159us; 156us; 159us; 157us; 159us; 160us; 159us; 163us; 159us; 169us; 159us; 170us; 159us; 171us; 159us; 172us; 159us; 173us; 159us; 174us; 159us; 175us; 159us; 178us; 159us; 182us; 159us; 183us; 159us; 184us; 159us; 185us; 159us; 186us; 159us; 188us; 159us; 189us; 159us; 190us; 235us; 192us; 235us; 196us; 159us; 199us; 159us; 205us; 159us; 225us; 159us; 227us; 159us; 228us; 159us; 231us; 159us; 233us; 159us; 236us; 235us; 240us; 235us; 243us; 235us; 247us; 235us; 250us; 235us; 253us; 235us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 12us; 15us; 18us; 21us; 26us; 32us; 35us; 39us; 42us; 46us; 50us; 97us; 100us; 106us; 109us; 112us; 115us; 118us; 122us; 141us; 145us; 149us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 2us; 1us; 2us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 7us; 1us; 8us; 1us; 9us; 1us; 9us; 1us; 9us; 1us; 9us; 2us; 10us; 11us; 1us; 10us; 1us; 10us; 1us; 13us; 1us; 13us; 2us; 14us; 15us; 2us; 14us; 15us; 2us; 14us; 15us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 19us; 14us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 15us; 19us; 15us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 2us; 16us; 17us; 2us; 16us; 17us; 1us; 16us; 1us; 16us; 2us; 19us; 21us; 2us; 19us; 21us; 1us; 19us; 1us; 19us; 2us; 20us; 22us; 1us; 20us; 1us; 20us; 4us; 23us; 24us; 28us; 29us; 4us; 23us; 24us; 28us; 29us; 2us; 23us; 28us; 1us; 23us; 1us; 23us; 1us; 23us; 2us; 24us; 29us; 2us; 24us; 29us; 2us; 24us; 29us; 2us; 24us; 29us; 1us; 24us; 1us; 24us; 1us; 24us; 2us; 25us; 26us; 2us; 25us; 26us; 1us; 25us; 1us; 25us; 1us; 28us; 1us; 29us; 2us; 30us; 31us; 1us; 30us; 1us; 30us; 1us; 32us; 1us; 32us; 1us; 32us; 1us; 32us; 19us; 33us; 35us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 20us; 33us; 35us; 37us; 38us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 20us; 33us; 35us; 37us; 38us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 19us; 33us; 35us; 39us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 19us; 33us; 35us; 40us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 19us; 33us; 35us; 41us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 19us; 33us; 35us; 42us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 19us; 33us; 35us; 43us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 19us; 33us; 35us; 44us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 19us; 33us; 35us; 44us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 19us; 33us; 35us; 44us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 19us; 33us; 35us; 44us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 19us; 33us; 35us; 45us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 19us; 33us; 35us; 45us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 19us; 33us; 35us; 46us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 19us; 33us; 35us; 46us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 19us; 33us; 35us; 48us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 19us; 33us; 35us; 49us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 19us; 33us; 35us; 53us; 54us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 19us; 33us; 35us; 53us; 54us; 55us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 19us; 33us; 35us; 53us; 54us; 55us; 56us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 19us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 19us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 19us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 19us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 19us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 19us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 19us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 63us; 64us; 65us; 66us; 67us; 68us; 19us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 64us; 65us; 66us; 67us; 68us; 19us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 65us; 66us; 67us; 68us; 19us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 66us; 67us; 68us; 19us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 67us; 68us; 19us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 68us; 19us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 19us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 73us; 20us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 74us; 75us; 19us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 88us; 20us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 89us; 90us; 20us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 89us; 90us; 20us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 91us; 92us; 20us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 93us; 94us; 1us; 33us; 1us; 33us; 1us; 33us; 4us; 34us; 43us; 70us; 105us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 35us; 1us; 35us; 1us; 36us; 1us; 36us; 1us; 36us; 2us; 37us; 38us; 2us; 37us; 38us; 1us; 37us; 1us; 38us; 2us; 39us; 40us; 4us; 39us; 97us; 99us; 105us; 1us; 39us; 1us; 40us; 1us; 40us; 1us; 40us; 2us; 41us; 42us; 4us; 41us; 97us; 99us; 105us; 1us; 41us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 43us; 1us; 44us; 1us; 44us; 1us; 44us; 1us; 44us; 1us; 44us; 1us; 44us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 47us; 1us; 48us; 1us; 49us; 1us; 49us; 1us; 49us; 1us; 50us; 1us; 51us; 1us; 52us; 1us; 53us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 61us; 1us; 61us; 1us; 62us; 2us; 62us; 74us; 1us; 62us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 2us; 66us; 68us; 1us; 67us; 1us; 67us; 1us; 68us; 1us; 69us; 1us; 69us; 1us; 69us; 1us; 69us; 1us; 69us; 1us; 69us; 1us; 69us; 1us; 71us; 1us; 72us; 1us; 73us; 1us; 73us; 1us; 73us; 1us; 73us; 2us; 74us; 75us; 2us; 74us; 75us; 2us; 74us; 75us; 1us; 74us; 1us; 76us; 1us; 77us; 3us; 78us; 80us; 81us; 1us; 79us; 1us; 80us; 1us; 80us; 1us; 80us; 1us; 81us; 1us; 81us; 1us; 81us; 2us; 82us; 83us; 1us; 82us; 1us; 82us; 2us; 85us; 86us; 2us; 85us; 86us; 2us; 85us; 86us; 1us; 85us; 1us; 85us; 1us; 88us; 1us; 88us; 2us; 89us; 90us; 2us; 89us; 90us; 1us; 89us; 1us; 90us; 1us; 91us; 1us; 91us; 1us; 93us; 1us; 93us; 1us; 96us; 1us; 96us; 1us; 96us; 1us; 96us; 3us; 97us; 99us; 105us; 1us; 97us; 1us; 97us; 1us; 97us; 1us; 98us; 1us; 98us; 1us; 98us; 1us; 98us; 1us; 98us; 1us; 98us; 2us; 100us; 101us; 1us; 100us; 1us; 100us; 2us; 102us; 103us; 1us; 102us; 1us; 102us; 1us; 105us; 1us; 105us; 1us; 105us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 26us; 28us; 31us; 33us; 35us; 37us; 39us; 42us; 45us; 48us; 50us; 52us; 54us; 56us; 76us; 78us; 80us; 82us; 84us; 86us; 88us; 90us; 110us; 113us; 116us; 118us; 120us; 123us; 126us; 128us; 130us; 133us; 135us; 137us; 142us; 147us; 150us; 152us; 154us; 156us; 159us; 162us; 165us; 168us; 170us; 172us; 174us; 177us; 180us; 182us; 184us; 186us; 188us; 191us; 193us; 195us; 197us; 199us; 201us; 203us; 223us; 244us; 265us; 285us; 305us; 325us; 345us; 365us; 385us; 405us; 425us; 445us; 465us; 485us; 505us; 525us; 545us; 565us; 585us; 605us; 625us; 645us; 665us; 685us; 705us; 725us; 745us; 765us; 785us; 805us; 825us; 845us; 865us; 885us; 905us; 926us; 946us; 967us; 988us; 1009us; 1030us; 1032us; 1034us; 1036us; 1041us; 1043us; 1045us; 1047us; 1049us; 1051us; 1053us; 1055us; 1057us; 1059us; 1061us; 1063us; 1066us; 1069us; 1071us; 1073us; 1076us; 1081us; 1083us; 1085us; 1087us; 1089us; 1092us; 1097us; 1099us; 1101us; 1103us; 1105us; 1107us; 1109us; 1111us; 1113us; 1115us; 1117us; 1119us; 1121us; 1123us; 1125us; 1127us; 1129us; 1131us; 1133us; 1135us; 1137us; 1139us; 1141us; 1143us; 1145us; 1147us; 1149us; 1151us; 1153us; 1155us; 1157us; 1159us; 1161us; 1163us; 1165us; 1167us; 1169us; 1171us; 1173us; 1175us; 1177us; 1180us; 1182us; 1184us; 1186us; 1188us; 1190us; 1193us; 1195us; 1197us; 1199us; 1201us; 1203us; 1205us; 1207us; 1209us; 1211us; 1213us; 1215us; 1217us; 1219us; 1221us; 1223us; 1225us; 1228us; 1231us; 1234us; 1236us; 1238us; 1240us; 1244us; 1246us; 1248us; 1250us; 1252us; 1254us; 1256us; 1258us; 1261us; 1263us; 1265us; 1268us; 1271us; 1274us; 1276us; 1278us; 1280us; 1282us; 1285us; 1288us; 1290us; 1292us; 1294us; 1296us; 1298us; 1300us; 1302us; 1304us; 1306us; 1308us; 1312us; 1314us; 1316us; 1318us; 1320us; 1322us; 1324us; 1326us; 1328us; 1330us; 1333us; 1335us; 1337us; 1340us; 1342us; 1344us; 1346us; 1348us; |]
let _fsyacc_action_rows = 258
let _fsyacc_actionTableElements = [|4us; 16387us; 14us; 46us; 45us; 19us; 47us; 17us; 48us; 10us; 0us; 49152us; 0us; 16385us; 4us; 16387us; 14us; 46us; 45us; 19us; 47us; 17us; 48us; 10us; 0us; 16386us; 0us; 16388us; 0us; 16389us; 0us; 16390us; 0us; 16391us; 0us; 16392us; 1us; 32768us; 35us; 11us; 1us; 16396us; 54us; 14us; 1us; 32768us; 34us; 13us; 0us; 16393us; 1us; 16395us; 29us; 15us; 1us; 16396us; 54us; 14us; 0us; 16394us; 1us; 32768us; 54us; 18us; 0us; 16397us; 2us; 32768us; 35us; 243us; 54us; 239us; 1us; 32768us; 54us; 21us; 2us; 32768us; 8us; 27us; 35us; 22us; 2us; 16402us; 35us; 243us; 54us; 239us; 1us; 32768us; 34us; 24us; 1us; 32768us; 10us; 25us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 17us; 16398us; 1us; 167us; 6us; 184us; 7us; 183us; 8us; 186us; 9us; 185us; 10us; 187us; 19us; 179us; 20us; 176us; 21us; 175us; 22us; 174us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 2us; 32768us; 18us; 39us; 54us; 43us; 1us; 32768us; 9us; 29us; 1us; 32768us; 35us; 30us; 2us; 16402us; 35us; 243us; 54us; 239us; 1us; 32768us; 34us; 32us; 1us; 32768us; 10us; 33us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 17us; 16399us; 1us; 167us; 6us; 184us; 7us; 183us; 8us; 186us; 9us; 185us; 10us; 187us; 19us; 179us; 20us; 176us; 21us; 175us; 22us; 174us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 1us; 32768us; 54us; 36us; 1us; 16401us; 29us; 37us; 2us; 16402us; 35us; 243us; 54us; 239us; 0us; 16400us; 1us; 32768us; 54us; 40us; 1us; 16405us; 29us; 41us; 2us; 32768us; 18us; 39us; 54us; 43us; 0us; 16403us; 1us; 16406us; 29us; 44us; 2us; 32768us; 18us; 39us; 54us; 43us; 0us; 16404us; 1us; 32768us; 54us; 47us; 2us; 32768us; 8us; 52us; 10us; 48us; 2us; 32768us; 31us; 49us; 54us; 68us; 2us; 16411us; 35us; 243us; 54us; 239us; 1us; 32768us; 30us; 51us; 0us; 16407us; 2us; 32768us; 18us; 39us; 54us; 43us; 1us; 32768us; 9us; 54us; 1us; 32768us; 10us; 55us; 2us; 32768us; 31us; 56us; 54us; 68us; 2us; 16411us; 35us; 243us; 54us; 239us; 1us; 32768us; 30us; 58us; 0us; 16408us; 1us; 32768us; 54us; 60us; 1us; 16410us; 12us; 61us; 2us; 16411us; 35us; 243us; 54us; 239us; 0us; 16409us; 0us; 16412us; 0us; 16413us; 1us; 16415us; 19us; 66us; 1us; 32768us; 54us; 68us; 0us; 16414us; 1us; 32768us; 35us; 69us; 2us; 16488us; 35us; 243us; 54us; 239us; 1us; 32768us; 34us; 71us; 0us; 16416us; 18us; 32768us; 1us; 167us; 6us; 184us; 7us; 183us; 8us; 186us; 9us; 185us; 10us; 187us; 19us; 179us; 20us; 176us; 21us; 175us; 22us; 174us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 32us; 124us; 33us; 123us; 35us; 113us; 18us; 32768us; 1us; 167us; 6us; 184us; 7us; 183us; 8us; 186us; 9us; 185us; 10us; 187us; 19us; 179us; 20us; 176us; 21us; 175us; 22us; 174us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 43us; 129us; 20us; 32768us; 1us; 167us; 6us; 184us; 7us; 183us; 8us; 186us; 9us; 185us; 10us; 187us; 19us; 179us; 20us; 176us; 21us; 175us; 22us; 174us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 41us; 227us; 42us; 225us; 50us; 130us; 16us; 16423us; 1us; 167us; 6us; 184us; 7us; 183us; 8us; 186us; 9us; 185us; 19us; 179us; 20us; 176us; 21us; 175us; 22us; 174us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 16us; 16424us; 1us; 167us; 6us; 184us; 7us; 183us; 8us; 186us; 9us; 185us; 19us; 179us; 20us; 176us; 21us; 175us; 22us; 174us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 16us; 16425us; 1us; 167us; 6us; 184us; 7us; 183us; 8us; 186us; 9us; 185us; 19us; 179us; 20us; 176us; 21us; 175us; 22us; 174us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 16us; 16426us; 1us; 167us; 6us; 184us; 7us; 183us; 8us; 186us; 9us; 185us; 19us; 179us; 20us; 176us; 21us; 175us; 22us; 174us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 16us; 16427us; 1us; 167us; 6us; 184us; 7us; 183us; 8us; 186us; 9us; 185us; 19us; 179us; 20us; 176us; 21us; 175us; 22us; 174us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 18us; 32768us; 1us; 167us; 6us; 184us; 7us; 183us; 8us; 186us; 9us; 185us; 10us; 187us; 12us; 147us; 19us; 179us; 20us; 176us; 21us; 175us; 22us; 174us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 18us; 32768us; 1us; 167us; 6us; 184us; 7us; 183us; 8us; 186us; 9us; 185us; 10us; 187us; 12us; 148us; 19us; 179us; 20us; 176us; 21us; 175us; 22us; 174us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 18us; 32768us; 1us; 167us; 6us; 184us; 7us; 183us; 8us; 186us; 9us; 185us; 10us; 187us; 19us; 179us; 20us; 176us; 21us; 175us; 22us; 174us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 34us; 149us; 35us; 113us; 18us; 32768us; 1us; 167us; 6us; 184us; 7us; 183us; 8us; 186us; 9us; 185us; 10us; 187us; 19us; 179us; 20us; 176us; 21us; 175us; 22us; 174us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 50us; 150us; 18us; 32768us; 1us; 167us; 6us; 184us; 7us; 183us; 8us; 186us; 9us; 185us; 10us; 187us; 19us; 179us; 20us; 176us; 21us; 175us; 22us; 174us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 40us; 152us; 18us; 32768us; 1us; 167us; 6us; 184us; 7us; 183us; 8us; 186us; 9us; 185us; 10us; 187us; 19us; 179us; 20us; 176us; 21us; 175us; 22us; 174us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 34us; 154us; 35us; 113us; 18us; 32768us; 1us; 167us; 6us; 184us; 7us; 183us; 8us; 186us; 9us; 185us; 10us; 187us; 19us; 179us; 20us; 176us; 21us; 175us; 22us; 174us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 34us; 157us; 35us; 113us; 18us; 32768us; 1us; 167us; 6us; 184us; 7us; 183us; 8us; 186us; 9us; 185us; 10us; 187us; 19us; 179us; 20us; 176us; 21us; 175us; 22us; 174us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 50us; 158us; 3us; 16432us; 1us; 167us; 33us; 123us; 35us; 113us; 3us; 16433us; 1us; 167us; 33us; 123us; 35us; 113us; 7us; 16438us; 1us; 167us; 20us; 176us; 24us; 172us; 25us; 171us; 28us; 173us; 33us; 123us; 35us; 113us; 7us; 16439us; 1us; 167us; 20us; 176us; 24us; 172us; 25us; 171us; 28us; 173us; 33us; 123us; 35us; 113us; 3us; 16440us; 1us; 167us; 33us; 123us; 35us; 113us; 3us; 16441us; 1us; 167us; 33us; 123us; 35us; 113us; 3us; 16442us; 1us; 167us; 33us; 123us; 35us; 113us; 14us; 16443us; 1us; 167us; 6us; 184us; 7us; 183us; 8us; 186us; 9us; 185us; 19us; 179us; 20us; 176us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 14us; 16444us; 1us; 167us; 6us; 184us; 7us; 183us; 8us; 186us; 9us; 185us; 19us; 179us; 20us; 176us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 3us; 16445us; 1us; 167us; 33us; 123us; 35us; 113us; 7us; 16446us; 1us; 167us; 20us; 176us; 24us; 172us; 25us; 171us; 28us; 173us; 33us; 123us; 35us; 113us; 10us; 16447us; 1us; 167us; 19us; 179us; 20us; 176us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 10us; 16448us; 1us; 167us; 19us; 179us; 20us; 176us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 10us; 16449us; 1us; 167us; 19us; 179us; 20us; 176us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 10us; 16450us; 1us; 167us; 19us; 179us; 20us; 176us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 16us; 16451us; 1us; 167us; 6us; 184us; 7us; 183us; 8us; 186us; 9us; 185us; 19us; 179us; 20us; 176us; 21us; 175us; 22us; 174us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 10us; 16452us; 1us; 167us; 19us; 179us; 20us; 176us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 10us; 16453us; 1us; 167us; 19us; 179us; 20us; 176us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 18us; 32768us; 1us; 167us; 6us; 184us; 7us; 183us; 8us; 186us; 9us; 185us; 10us; 187us; 15us; 200us; 19us; 179us; 20us; 176us; 21us; 175us; 22us; 174us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 17us; 16459us; 1us; 167us; 6us; 184us; 7us; 183us; 8us; 186us; 9us; 185us; 10us; 187us; 19us; 180us; 20us; 176us; 21us; 175us; 22us; 174us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 18us; 32768us; 1us; 167us; 6us; 184us; 7us; 183us; 8us; 186us; 9us; 185us; 10us; 187us; 19us; 179us; 20us; 176us; 21us; 175us; 22us; 174us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 50us; 226us; 18us; 32768us; 1us; 167us; 6us; 184us; 7us; 183us; 8us; 186us; 9us; 185us; 10us; 187us; 19us; 179us; 20us; 176us; 21us; 175us; 22us; 174us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 43us; 228us; 20us; 32768us; 1us; 167us; 6us; 184us; 7us; 183us; 8us; 186us; 9us; 185us; 10us; 187us; 19us; 179us; 20us; 176us; 21us; 175us; 22us; 174us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 41us; 227us; 42us; 225us; 50us; 229us; 18us; 16476us; 1us; 167us; 6us; 184us; 7us; 183us; 8us; 186us; 9us; 185us; 10us; 187us; 12us; 231us; 19us; 179us; 20us; 176us; 21us; 175us; 22us; 174us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 33us; 123us; 35us; 113us; 18us; 16478us; 1us; 167us; 6us; 184us; 7us; 183us; 8us; 186us; 9us; 185us; 10us; 187us; 19us; 179us; 20us; 176us; 21us; 175us; 22us; 174us; 24us; 172us; 25us; 171us; 26us; 170us; 27us; 169us; 28us; 173us; 29us; 233us; 33us; 123us; 35us; 113us; 17us; 16479us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 1us; 32768us; 34us; 115us; 0us; 16417us; 1us; 16454us; 13us; 255us; 2us; 32768us; 18us; 39us; 54us; 43us; 1us; 32768us; 9us; 119us; 1us; 32768us; 35us; 120us; 17us; 16479us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 1us; 32768us; 34us; 122us; 0us; 16418us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 0us; 16419us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 1us; 32768us; 34us; 127us; 0us; 16420us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 0us; 16421us; 0us; 16422us; 2us; 32768us; 35us; 243us; 54us; 133us; 3us; 16483us; 8us; 240us; 10us; 134us; 13us; 255us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 1us; 32768us; 54us; 136us; 1us; 32768us; 10us; 137us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 2us; 32768us; 35us; 243us; 54us; 139us; 3us; 16483us; 8us; 240us; 10us; 140us; 13us; 255us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 1us; 32768us; 54us; 142us; 1us; 32768us; 10us; 143us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 1us; 32768us; 35us; 146us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 0us; 16428us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 1us; 32768us; 35us; 153us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 0us; 16429us; 1us; 32768us; 35us; 156us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 0us; 16430us; 0us; 16431us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 1us; 32768us; 17us; 162us; 1us; 32768us; 17us; 163us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 0us; 16434us; 0us; 16435us; 0us; 16436us; 1us; 32768us; 54us; 168us; 0us; 16437us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 1us; 32768us; 20us; 177us; 1us; 32768us; 20us; 178us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 1us; 32768us; 19us; 181us; 5us; 32768us; 2us; 210us; 19us; 181us; 54us; 209us; 55us; 208us; 56us; 207us; 1us; 32768us; 19us; 182us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 18us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 9us; 189us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 1us; 32768us; 10us; 188us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 2us; 32768us; 35us; 243us; 54us; 239us; 1us; 32768us; 35us; 192us; 2us; 16402us; 35us; 243us; 54us; 239us; 1us; 32768us; 34us; 194us; 1us; 32768us; 26us; 195us; 1us; 32768us; 9us; 196us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 0us; 16455us; 0us; 16456us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 4us; 32768us; 2us; 210us; 54us; 209us; 55us; 208us; 56us; 207us; 1us; 32768us; 50us; 202us; 0us; 16457us; 1us; 32768us; 10us; 204us; 1us; 32768us; 9us; 205us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 0us; 16458us; 0us; 16460us; 0us; 16461us; 2us; 16462us; 31us; 214us; 35us; 211us; 0us; 16463us; 4us; 16468us; 2us; 210us; 54us; 209us; 55us; 208us; 56us; 207us; 1us; 32768us; 34us; 213us; 0us; 16464us; 1us; 16471us; 54us; 220us; 1us; 32768us; 30us; 216us; 0us; 16465us; 1us; 16467us; 29us; 218us; 4us; 16468us; 2us; 210us; 54us; 209us; 55us; 208us; 56us; 207us; 0us; 16466us; 1us; 32768us; 10us; 221us; 4us; 32768us; 2us; 210us; 54us; 209us; 55us; 208us; 56us; 207us; 1us; 16470us; 12us; 223us; 1us; 16471us; 54us; 220us; 0us; 16469us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 0us; 16472us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 0us; 16473us; 0us; 16474us; 17us; 32768us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 0us; 16475us; 17us; 16479us; 3us; 166us; 4us; 165us; 5us; 164us; 16us; 199us; 17us; 161us; 23us; 160us; 35us; 125us; 36us; 145us; 37us; 138us; 38us; 132us; 39us; 151us; 40us; 155us; 44us; 128us; 45us; 190us; 54us; 116us; 55us; 198us; 56us; 197us; 0us; 16477us; 1us; 32768us; 8us; 236us; 2us; 32768us; 35us; 243us; 54us; 239us; 1us; 32768us; 9us; 238us; 0us; 16480us; 2us; 16483us; 8us; 240us; 13us; 255us; 2us; 32768us; 35us; 243us; 54us; 239us; 1us; 32768us; 9us; 242us; 0us; 16481us; 2us; 16488us; 35us; 243us; 54us; 239us; 1us; 32768us; 34us; 245us; 1us; 32768us; 26us; 246us; 1us; 32768us; 9us; 247us; 2us; 32768us; 35us; 243us; 54us; 239us; 0us; 16482us; 1us; 16485us; 29us; 250us; 2us; 32768us; 35us; 243us; 54us; 239us; 0us; 16484us; 1us; 16487us; 29us; 253us; 2us; 16488us; 35us; 243us; 54us; 239us; 0us; 16486us; 1us; 32768us; 13us; 256us; 1us; 32768us; 54us; 257us; 0us; 16489us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 5us; 6us; 7us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 20us; 22us; 24us; 25us; 27us; 29us; 30us; 32us; 33us; 36us; 38us; 41us; 44us; 46us; 48us; 66us; 84us; 87us; 89us; 91us; 94us; 96us; 98us; 116us; 134us; 136us; 138us; 141us; 142us; 144us; 146us; 149us; 150us; 152us; 155us; 156us; 158us; 161us; 164us; 167us; 169us; 170us; 173us; 175us; 177us; 180us; 183us; 185us; 186us; 188us; 190us; 193us; 194us; 195us; 196us; 198us; 200us; 201us; 203us; 206us; 208us; 209us; 228us; 247us; 268us; 285us; 302us; 319us; 336us; 353us; 372us; 391us; 410us; 429us; 448us; 467us; 486us; 505us; 509us; 513us; 521us; 529us; 533us; 537us; 541us; 556us; 571us; 575us; 583us; 594us; 605us; 616us; 627us; 644us; 655us; 666us; 685us; 703us; 722us; 741us; 762us; 781us; 800us; 818us; 820us; 821us; 823us; 826us; 828us; 830us; 848us; 850us; 851us; 869us; 870us; 888us; 890us; 891us; 909us; 927us; 928us; 929us; 932us; 936us; 954us; 956us; 958us; 976us; 979us; 983us; 1001us; 1003us; 1005us; 1023us; 1041us; 1043us; 1061us; 1079us; 1097us; 1115us; 1116us; 1134us; 1136us; 1154us; 1155us; 1157us; 1175us; 1193us; 1194us; 1195us; 1213us; 1215us; 1217us; 1235us; 1236us; 1237us; 1238us; 1240us; 1241us; 1259us; 1277us; 1295us; 1313us; 1331us; 1349us; 1367us; 1369us; 1371us; 1389us; 1391us; 1397us; 1399us; 1417us; 1435us; 1453us; 1471us; 1490us; 1492us; 1510us; 1528us; 1531us; 1533us; 1536us; 1538us; 1540us; 1542us; 1560us; 1561us; 1562us; 1580us; 1585us; 1587us; 1588us; 1590us; 1592us; 1610us; 1611us; 1612us; 1613us; 1616us; 1617us; 1622us; 1624us; 1625us; 1627us; 1629us; 1630us; 1632us; 1637us; 1638us; 1640us; 1645us; 1647us; 1649us; 1650us; 1668us; 1669us; 1687us; 1705us; 1706us; 1707us; 1725us; 1726us; 1744us; 1745us; 1747us; 1750us; 1752us; 1753us; 1756us; 1759us; 1761us; 1762us; 1765us; 1767us; 1769us; 1771us; 1774us; 1775us; 1777us; 1780us; 1781us; 1783us; 1786us; 1787us; 1789us; 1791us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 2us; 0us; 1us; 1us; 1us; 1us; 1us; 4us; 3us; 1us; 0us; 2us; 8us; 11us; 4us; 2us; 0us; 4us; 3us; 2us; 1us; 6us; 9us; 4us; 2us; 0us; 4us; 7us; 3us; 1us; 4us; 4us; 7us; 4us; 3us; 5us; 5us; 4us; 5us; 4us; 5us; 3us; 10us; 6us; 6us; 1us; 2us; 4us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 5us; 5us; 3us; 3us; 3us; 3us; 4us; 4us; 8us; 1us; 1us; 1us; 5us; 6us; 4us; 1us; 1us; 1us; 1us; 4us; 4us; 3us; 1us; 0us; 5us; 3us; 0us; 3us; 5us; 5us; 3us; 1us; 3us; 1us; 0us; 4us; 4us; 6us; 1us; 3us; 1us; 3us; 1us; 0us; 4us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 4us; 5us; 5us; 5us; 6us; 7us; 7us; 8us; 8us; 8us; 9us; 9us; 9us; 9us; 10us; 10us; 11us; 11us; 11us; 12us; 12us; 13us; 13us; 14us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 18us; 19us; 19us; 19us; 20us; 20us; 20us; 21us; 21us; 22us; 22us; 22us; 23us; 23us; 23us; 23us; 24us; 24us; 25us; 25us; 25us; 26us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 16385us; 65535us; 16386us; 16388us; 16389us; 16390us; 16391us; 16392us; 65535us; 65535us; 65535us; 16393us; 65535us; 65535us; 16394us; 65535us; 16397us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16400us; 65535us; 65535us; 65535us; 16403us; 65535us; 65535us; 16404us; 65535us; 65535us; 65535us; 65535us; 65535us; 16407us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16408us; 65535us; 65535us; 65535us; 16409us; 16412us; 16413us; 65535us; 65535us; 16414us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 16419us; 65535us; 65535us; 16420us; 65535us; 65535us; 16421us; 16422us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16428us; 65535us; 65535us; 65535us; 16429us; 65535us; 65535us; 65535us; 16430us; 16431us; 65535us; 65535us; 65535us; 65535us; 16434us; 16435us; 16436us; 65535us; 16437us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16455us; 16456us; 65535us; 65535us; 65535us; 16457us; 65535us; 65535us; 65535us; 16458us; 16460us; 16461us; 65535us; 16463us; 65535us; 65535us; 16464us; 65535us; 65535us; 16465us; 65535us; 65535us; 16466us; 65535us; 65535us; 65535us; 65535us; 16469us; 65535us; 16472us; 65535us; 65535us; 16473us; 16474us; 65535us; 16475us; 65535us; 16477us; 65535us; 65535us; 65535us; 16480us; 65535us; 65535us; 65535us; 16481us; 65535us; 65535us; 65535us; 65535us; 65535us; 16482us; 65535us; 65535us; 16484us; 65535us; 65535us; 16486us; 65535us; 65535us; 16489us; |]
let _fsyacc_reductions ()  =    [| 
# 532 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  Module )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startstart));
# 541 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'declarationList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "Juniper\Parser.fsy"
                                           Module (_1) 
                   )
# 82 "Juniper\Parser.fsy"
                 :  Module ));
# 552 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'declaration)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'declarationList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 85 "Juniper\Parser.fsy"
                                                        _1 :: _2 
                   )
# 85 "Juniper\Parser.fsy"
                 : 'declarationList));
# 564 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "Juniper\Parser.fsy"
                                                        [] 
                   )
# 86 "Juniper\Parser.fsy"
                 : 'declarationList));
# 574 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleNameDec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 89 "Juniper\Parser.fsy"
                                           _1 
                   )
# 89 "Juniper\Parser.fsy"
                 : 'declaration));
# 585 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'exports)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 "Juniper\Parser.fsy"
                                           _1 
                   )
# 90 "Juniper\Parser.fsy"
                 : 'declaration));
# 596 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fundec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "Juniper\Parser.fsy"
                                           _1 
                   )
# 91 "Juniper\Parser.fsy"
                 : 'declaration));
# 607 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recorddec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "Juniper\Parser.fsy"
                                           _1 
                   )
# 92 "Juniper\Parser.fsy"
                 : 'declaration));
# 618 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'uniondec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "Juniper\Parser.fsy"
                                           _1 
                   )
# 93 "Juniper\Parser.fsy"
                 : 'declaration));
# 629 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'exportsList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "Juniper\Parser.fsy"
                                                            Export _3 
                   )
# 96 "Juniper\Parser.fsy"
                 : 'exports));
# 640 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'exportsList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "Juniper\Parser.fsy"
                                                 _1 :: _3 
                   )
# 99 "Juniper\Parser.fsy"
                 : 'exportsList));
# 652 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "Juniper\Parser.fsy"
                                                 [_1] 
                   )
# 100 "Juniper\Parser.fsy"
                 : 'exportsList));
# 663 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "Juniper\Parser.fsy"
                                                 [] 
                   )
# 101 "Juniper\Parser.fsy"
                 : 'exportsList));
# 673 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "Juniper\Parser.fsy"
                                                 ModuleNameDec _2 
                   )
# 104 "Juniper\Parser.fsy"
                 : 'moduleNameDec));
# 684 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'funargList)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "Juniper\Parser.fsy"
                                                                             FunctionDec {name=_3; template=None; clause=FunctionClause {arguments=_5; body=_8}; returnTy=_2 } 
                   )
# 107 "Juniper\Parser.fsy"
                 : 'fundec));
# 698 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tycaplist)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'funargList)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "Juniper\Parser.fsy"
                                                                                                   FunctionDec {name=_3; template=Some _5; clause=FunctionClause {arguments=_8; body=_11}; returnTy=_2}
                   )
# 108 "Juniper\Parser.fsy"
                 : 'fundec));
# 713 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'funargList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "Juniper\Parser.fsy"
                                                      (_1,_2) :: _4
                   )
# 111 "Juniper\Parser.fsy"
                 : 'funargList));
# 726 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "Juniper\Parser.fsy"
                                                      [(_1,_2)]
                   )
# 112 "Juniper\Parser.fsy"
                 : 'funargList));
# 738 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "Juniper\Parser.fsy"
                                                      []
                   )
# 113 "Juniper\Parser.fsy"
                 : 'funargList));
# 748 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'tycaplist)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 "Juniper\Parser.fsy"
                                                   match _4 with
                                                   | Template { tyVars=t; capacityVars=c } -> Template {tyVars=_2::t; capacityVars=c} 
                   )
# 116 "Juniper\Parser.fsy"
                 : 'tycaplist));
# 761 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tycaplist)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "Juniper\Parser.fsy"
                                                   match _3 with
                                                   | Template { tyVars=t; capacityVars=c } -> Template {tyVars=t; capacityVars=_1::c} 
                   )
# 118 "Juniper\Parser.fsy"
                 : 'tycaplist));
# 774 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "Juniper\Parser.fsy"
                                                   Template {tyVars=[_2]; capacityVars=[]} 
                   )
# 120 "Juniper\Parser.fsy"
                 : 'tycaplist));
# 785 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "Juniper\Parser.fsy"
                                                   Template {tyVars=[]; capacityVars=[_1]} 
                   )
# 121 "Juniper\Parser.fsy"
                 : 'tycaplist));
# 796 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "Juniper\Parser.fsy"
                                                                                                  RecordDec {name=_2; fields=_5; template=None}
                   )
# 124 "Juniper\Parser.fsy"
                 : 'recorddec));
# 808 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'tycaplist)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "Juniper\Parser.fsy"
                                                                                                  RecordDec {name=_2; fields=_8; template=Some _4}
                   )
# 125 "Juniper\Parser.fsy"
                 : 'recorddec));
# 821 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "Juniper\Parser.fsy"
                                                          (_1, _2) :: _4
                   )
# 128 "Juniper\Parser.fsy"
                 : 'recordList));
# 834 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "Juniper\Parser.fsy"
                                                          [(_1, _2)]
                   )
# 129 "Juniper\Parser.fsy"
                 : 'recordList));
# 846 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "Juniper\Parser.fsy"
                                                          []
                   )
# 130 "Juniper\Parser.fsy"
                 : 'recordList));
# 856 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'valueConList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "Juniper\Parser.fsy"
                                                                            UnionDec {name=_2; valCons=_4; template=None} 
                   )
# 133 "Juniper\Parser.fsy"
                 : 'uniondec));
# 868 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'tycaplist)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'valueConList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "Juniper\Parser.fsy"
                                                                            UnionDec {name=_2; valCons=_7; template=Some _4}
                   )
# 134 "Juniper\Parser.fsy"
                 : 'uniondec));
# 881 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'valueCon)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'valueConList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "Juniper\Parser.fsy"
                                                     _1 :: _3
                   )
# 137 "Juniper\Parser.fsy"
                 : 'valueConList));
# 893 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'valueCon)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "Juniper\Parser.fsy"
                                                     [_1]
                   )
# 138 "Juniper\Parser.fsy"
                 : 'valueConList));
# 904 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexprList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "Juniper\Parser.fsy"
                                                      (_1, _3)
                   )
# 141 "Juniper\Parser.fsy"
                 : 'valueCon));
# 916 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'callExprList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "Juniper\Parser.fsy"
                                                             CallExp {func=_1; templateArgs=None; args=_3}
                   )
# 144 "Juniper\Parser.fsy"
                 : 'expr));
# 928 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tycaplist)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'callExprList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "Juniper\Parser.fsy"
                                                                               CallExp {func=VarExp {name=_1}; templateArgs=Some _3; args=_6} 
                   )
# 145 "Juniper\Parser.fsy"
                 : 'expr));
# 941 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "Juniper\Parser.fsy"
                                                            ArrayAccessExp {array=_1; index=_3}
                   )
# 146 "Juniper\Parser.fsy"
                 : 'expr));
# 953 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExprList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "Juniper\Parser.fsy"
                                                            SequenceExp {exps=_2}
                   )
# 147 "Juniper\Parser.fsy"
                 : 'expr));
# 964 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "Juniper\Parser.fsy"
                                                            IfElseExp {condition=_2; trueBranch=_4; falseBranch=UnitExp}
                   )
# 148 "Juniper\Parser.fsy"
                 : 'expr));
# 976 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'elifList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "Juniper\Parser.fsy"
                                                            IfElseExp {condition=_2; trueBranch=_4; falseBranch=_5}
                   )
# 149 "Juniper\Parser.fsy"
                 : 'expr));
# 989 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "Juniper\Parser.fsy"
                                                            DecLetExp { varName=_2; typ=None; right=_4 }
                   )
# 150 "Juniper\Parser.fsy"
                 : 'expr));
# 1001 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "Juniper\Parser.fsy"
                                                            DecLetExp { varName=_3; typ=Some _2; right=_5 }
                   )
# 151 "Juniper\Parser.fsy"
                 : 'expr));
# 1014 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "Juniper\Parser.fsy"
                                                            DecVarExp { varName=_2; typ=None; right=_4}
                   )
# 152 "Juniper\Parser.fsy"
                 : 'expr));
# 1026 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "Juniper\Parser.fsy"
                                                            DecVarExp { varName=_3; typ=Some _2; right=_5}
                   )
# 153 "Juniper\Parser.fsy"
                 : 'expr));
# 1039 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "Juniper\Parser.fsy"
                                                            AssignExp { left=VarMutation{varName=_1}; right=_3}
                   )
# 154 "Juniper\Parser.fsy"
                 : 'expr));
# 1051 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "Juniper\Parser.fsy"
                                                                                        ForLoopExp { init=_3; condition=_5; afterthought=_7 }
                   )
# 155 "Juniper\Parser.fsy"
                 : 'expr));
# 1065 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "Juniper\Parser.fsy"
                                                            DoWhileLoopExp {condition=_5; body=_2}
                   )
# 156 "Juniper\Parser.fsy"
                 : 'expr));
# 1077 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "Juniper\Parser.fsy"
                                                            WhileLoopExp {condition=_3; body=_5}
                   )
# 157 "Juniper\Parser.fsy"
                 : 'expr));
# 1089 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleQualifier)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "Juniper\Parser.fsy"
                                                            ModQualifierExp _1
                   )
# 158 "Juniper\Parser.fsy"
                 : 'expr));
# 1100 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "Juniper\Parser.fsy"
                                                            UnaryOpExp {op=LogicalNot; exp=_2}
                   )
# 159 "Juniper\Parser.fsy"
                 : 'expr));
# 1111 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "Juniper\Parser.fsy"
                                                            UnaryOpExp {op=BitwiseNot; exp=_4}
                   )
# 160 "Juniper\Parser.fsy"
                 : 'expr));
# 1122 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "Juniper\Parser.fsy"
                                                            UnitExp
                   )
# 161 "Juniper\Parser.fsy"
                 : 'expr));
# 1132 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "Juniper\Parser.fsy"
                                                            TrueExp
                   )
# 162 "Juniper\Parser.fsy"
                 : 'expr));
# 1142 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "Juniper\Parser.fsy"
                                                            FalseExp
                   )
# 163 "Juniper\Parser.fsy"
                 : 'expr));
# 1152 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "Juniper\Parser.fsy"
                                                            RecordAccessExp {record=_1; fieldName=_3}
                   )
# 164 "Juniper\Parser.fsy"
                 : 'expr));
# 1164 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "Juniper\Parser.fsy"
                                                            BinaryOpExp {op=Add; left=_1; right=_3}
                   )
# 165 "Juniper\Parser.fsy"
                 : 'expr));
# 1176 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "Juniper\Parser.fsy"
                                                            BinaryOpExp {op=Subtract; left=_1; right=_3}
                   )
# 166 "Juniper\Parser.fsy"
                 : 'expr));
# 1188 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "Juniper\Parser.fsy"
                                                            BinaryOpExp {op=Multiply; left=_1; right=_3}
                   )
# 167 "Juniper\Parser.fsy"
                 : 'expr));
# 1200 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "Juniper\Parser.fsy"
                                                            BinaryOpExp {op=Divide; left=_1; right=_3}
                   )
# 168 "Juniper\Parser.fsy"
                 : 'expr));
# 1212 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "Juniper\Parser.fsy"
                                                            BinaryOpExp {op=Modulo; left=_1; right=_3}
                   )
# 169 "Juniper\Parser.fsy"
                 : 'expr));
# 1224 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "Juniper\Parser.fsy"
                                                            BinaryOpExp {op=LogicalAnd; left=_1; right=_3}
                   )
# 170 "Juniper\Parser.fsy"
                 : 'expr));
# 1236 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "Juniper\Parser.fsy"
                                                            BinaryOpExp {op=LogicalOr; left=_1; right=_3}
                   )
# 171 "Juniper\Parser.fsy"
                 : 'expr));
# 1248 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "Juniper\Parser.fsy"
                                                                  BinaryOpExp {op=BitwiseAnd; left=_1; right=_5}
                   )
# 172 "Juniper\Parser.fsy"
                 : 'expr));
# 1260 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "Juniper\Parser.fsy"
                                                            BinaryOpExp {op=BitwiseOr; left=_1; right=_5}
                   )
# 173 "Juniper\Parser.fsy"
                 : 'expr));
# 1272 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "Juniper\Parser.fsy"
                                                            BinaryOpExp {op=GreaterOrEqual; left=_1; right=_3}
                   )
# 174 "Juniper\Parser.fsy"
                 : 'expr));
# 1284 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "Juniper\Parser.fsy"
                                                            BinaryOpExp {op=LessOrEqual; left=_1; right=_3}
                   )
# 175 "Juniper\Parser.fsy"
                 : 'expr));
# 1296 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "Juniper\Parser.fsy"
                                                            BinaryOpExp {op=Greater; left=_1; right=_3}
                   )
# 176 "Juniper\Parser.fsy"
                 : 'expr));
# 1308 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "Juniper\Parser.fsy"
                                                            BinaryOpExp {op=Less; left=_1; right=_3}
                   )
# 177 "Juniper\Parser.fsy"
                 : 'expr));
# 1320 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "Juniper\Parser.fsy"
                                                            BinaryOpExp {op=Equal; left=_1; right=_4}
                   )
# 178 "Juniper\Parser.fsy"
                 : 'expr));
# 1332 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "Juniper\Parser.fsy"
                                                            BinaryOpExp {op=NotEqual; left=_1; right=_4}
                   )
# 179 "Juniper\Parser.fsy"
                 : 'expr));
# 1344 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'funargList)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "Juniper\Parser.fsy"
                                                                                LambdaExp {clause=FunctionClause {arguments=_4; body=_8}; returnTy=_2 }
                   )
# 180 "Juniper\Parser.fsy"
                 : 'expr));
# 1357 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "Juniper\Parser.fsy"
                                                             VarExp {name=_1}
                   )
# 181 "Juniper\Parser.fsy"
                 : 'expr));
# 1368 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "Juniper\Parser.fsy"
                                                             IntExp _1 
                   )
# 182 "Juniper\Parser.fsy"
                 : 'expr));
# 1379 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "Juniper\Parser.fsy"
                                                             FloatExp _1 
                   )
# 183 "Juniper\Parser.fsy"
                 : 'expr));
# 1390 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'caseClauseList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "Juniper\Parser.fsy"
                                                             CaseExp {on=_2; clauses=_4}
                   )
# 184 "Juniper\Parser.fsy"
                 : 'expr));
# 1402 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'caseClauseList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "Juniper\Parser.fsy"
                                                                       (_1, _4) :: _6
                   )
# 187 "Juniper\Parser.fsy"
                 : 'caseClauseList));
# 1415 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "Juniper\Parser.fsy"
                                                                       [(_1, _4)]
                   )
# 188 "Juniper\Parser.fsy"
                 : 'caseClauseList));
# 1427 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "Juniper\Parser.fsy"
                                                                     MatchIntVal _1
                   )
# 191 "Juniper\Parser.fsy"
                 : 'pattern));
# 1438 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "Juniper\Parser.fsy"
                                                                     MatchFloatVal _1
                   )
# 192 "Juniper\Parser.fsy"
                 : 'pattern));
# 1449 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "Juniper\Parser.fsy"
                                                                     MatchVar _1
                   )
# 193 "Juniper\Parser.fsy"
                 : 'pattern));
# 1460 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "Juniper\Parser.fsy"
                                                                     MatchUnderscore
                   )
# 194 "Juniper\Parser.fsy"
                 : 'pattern));
# 1470 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'valConPatternList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "Juniper\Parser.fsy"
                                                                     MatchValCon (_1, _3)
                   )
# 195 "Juniper\Parser.fsy"
                 : 'pattern));
# 1482 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recPatternList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "Juniper\Parser.fsy"
                                                                     MatchRecCon (_1, _3)
                   )
# 196 "Juniper\Parser.fsy"
                 : 'pattern));
# 1494 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'valConPatternList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "Juniper\Parser.fsy"
                                                          _1 :: _3
                   )
# 199 "Juniper\Parser.fsy"
                 : 'valConPatternList));
# 1506 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "Juniper\Parser.fsy"
                                                          [_1]
                   )
# 200 "Juniper\Parser.fsy"
                 : 'valConPatternList));
# 1517 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "Juniper\Parser.fsy"
                                                          []
                   )
# 201 "Juniper\Parser.fsy"
                 : 'valConPatternList));
# 1527 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'pattern)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recPatternList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "Juniper\Parser.fsy"
                                                                    (_1, _3) :: _5
                   )
# 204 "Juniper\Parser.fsy"
                 : 'recPatternList));
# 1540 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'pattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 "Juniper\Parser.fsy"
                                                                    [(_1, _3)]
                   )
# 205 "Juniper\Parser.fsy"
                 : 'recPatternList));
# 1552 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "Juniper\Parser.fsy"
                                                                    []
                   )
# 206 "Juniper\Parser.fsy"
                 : 'recPatternList));
# 1562 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "Juniper\Parser.fsy"
                                                       _2
                   )
# 209 "Juniper\Parser.fsy"
                 : 'elifList));
# 1573 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "Juniper\Parser.fsy"
                                                       IfElseExp {condition=_2; trueBranch=_4; falseBranch=UnitExp}
                   )
# 210 "Juniper\Parser.fsy"
                 : 'elifList));
# 1585 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'elifList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "Juniper\Parser.fsy"
                                                       IfElseExp {condition=_2; trueBranch=_4; falseBranch=_5}
                   )
# 211 "Juniper\Parser.fsy"
                 : 'elifList));
# 1598 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExprList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "Juniper\Parser.fsy"
                                                     _1::_3
                   )
# 214 "Juniper\Parser.fsy"
                 : 'seqExprList));
# 1610 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "Juniper\Parser.fsy"
                                                     [_1]
                   )
# 215 "Juniper\Parser.fsy"
                 : 'seqExprList));
# 1621 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'callExprList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "Juniper\Parser.fsy"
                                                  _1::_3
                   )
# 218 "Juniper\Parser.fsy"
                 : 'callExprList));
# 1633 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "Juniper\Parser.fsy"
                                                  [_1]
                   )
# 219 "Juniper\Parser.fsy"
                 : 'callExprList));
# 1644 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "Juniper\Parser.fsy"
                                                  []
                   )
# 220 "Juniper\Parser.fsy"
                 : 'callExprList));
# 1654 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleQualifier)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'nonEmptyTyExprList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "Juniper\Parser.fsy"
                                                                         TyApply {tyConstructor=TyModuleQualifier _1; args=_3}
                   )
# 223 "Juniper\Parser.fsy"
                 : 'tyexpr));
# 1666 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'nonEmptyTyExprList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "Juniper\Parser.fsy"
                                                                         TyApply {tyConstructor=TyName _1; args=_3}
                   )
# 224 "Juniper\Parser.fsy"
                 : 'tyexpr));
# 1678 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexprList)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 225 "Juniper\Parser.fsy"
                                                                         FunTy {args=_2; returnType=_6}
                   )
# 225 "Juniper\Parser.fsy"
                 : 'tyexpr));
# 1690 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 "Juniper\Parser.fsy"
                                                                         match _1 with
                                                                             | "uint8" -> BaseTy TyUint8
                                                                             | "uint16" -> BaseTy TyUint16
                                                                             | "uint32" -> BaseTy TyUint32
                                                                             | "uint64" -> BaseTy TyUint64
                                                                             | "int8" -> BaseTy TyInt8
                                                                             | "int16" -> BaseTy TyInt16
                                                                             | "int32" -> BaseTy TyInt32
                                                                             | "int64" -> BaseTy TyInt64
                                                                             | "bool" -> BaseTy TyBool
                                                                             | _ -> TyName _1 
                   )
# 226 "Juniper\Parser.fsy"
                 : 'tyexpr));
# 1711 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'nonEmptyTyExprList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 239 "Juniper\Parser.fsy"
                                                          _1::_3
                   )
# 239 "Juniper\Parser.fsy"
                 : 'nonEmptyTyExprList));
# 1723 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 240 "Juniper\Parser.fsy"
                                                          [_1]
                   )
# 240 "Juniper\Parser.fsy"
                 : 'nonEmptyTyExprList));
# 1734 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexprList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 243 "Juniper\Parser.fsy"
                                                  _1::_3
                   )
# 243 "Juniper\Parser.fsy"
                 : 'tyexprList));
# 1746 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 244 "Juniper\Parser.fsy"
                                                  [_1]
                   )
# 244 "Juniper\Parser.fsy"
                 : 'tyexprList));
# 1757 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 245 "Juniper\Parser.fsy"
                                                  []
                   )
# 245 "Juniper\Parser.fsy"
                 : 'tyexprList));
# 1767 "Juniper\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 248 "Juniper\Parser.fsy"
                                             {module_=_1; name=_4} 
                   )
# 248 "Juniper\Parser.fsy"
                 : 'moduleQualifier));
|]
# 1780 "Juniper\Parser.fs"
let tables () : Microsoft.FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Microsoft.FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 60;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let start lexer lexbuf :  Module  =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
