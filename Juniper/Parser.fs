// Implementation file for parser generated by fsyacc
module Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Ast
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Text.Parsing.ParseHelpers
# 1 "Parser.fsy"


# 10 "Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | DOT
  | UNDERSCORE
  | FALSE
  | TRUE
  | UNIT
  | LTHENEQ
  | GTHENEQ
  | LTHEN
  | GTHEN
  | EQUAL
  | NOTEQUAL
  | SEMICOLON
  | COLON
  | TYPE
  | OF
  | CASE
  | TILDE
  | TICK
  | PIPE
  | AMPERSAND
  | OR
  | AND
  | NOT
  | DIVIDE
  | TIMES
  | MINUS
  | PLUS
  | MOD
  | COMMA
  | RCURLYBRACE
  | LCURLYBRACE
  | RBRACK
  | LBRACK
  | RPAREN
  | LPAREN
  | FOR
  | VAR
  | LET
  | DO
  | WHILE
  | ELIF
  | ELSE
  | THEN
  | IF
  | FUN
  | BREAK
  | MODULE
  | EXPORT
  | OPEN
  | END
  | RETURN
  | RECORD
  | STRING of (string)
  | ID of (string)
  | FLOAT of (float)
  | INT of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_DOT
    | TOKEN_UNDERSCORE
    | TOKEN_FALSE
    | TOKEN_TRUE
    | TOKEN_UNIT
    | TOKEN_LTHENEQ
    | TOKEN_GTHENEQ
    | TOKEN_LTHEN
    | TOKEN_GTHEN
    | TOKEN_EQUAL
    | TOKEN_NOTEQUAL
    | TOKEN_SEMICOLON
    | TOKEN_COLON
    | TOKEN_TYPE
    | TOKEN_OF
    | TOKEN_CASE
    | TOKEN_TILDE
    | TOKEN_TICK
    | TOKEN_PIPE
    | TOKEN_AMPERSAND
    | TOKEN_OR
    | TOKEN_AND
    | TOKEN_NOT
    | TOKEN_DIVIDE
    | TOKEN_TIMES
    | TOKEN_MINUS
    | TOKEN_PLUS
    | TOKEN_MOD
    | TOKEN_COMMA
    | TOKEN_RCURLYBRACE
    | TOKEN_LCURLYBRACE
    | TOKEN_RBRACK
    | TOKEN_LBRACK
    | TOKEN_RPAREN
    | TOKEN_LPAREN
    | TOKEN_FOR
    | TOKEN_VAR
    | TOKEN_LET
    | TOKEN_DO
    | TOKEN_WHILE
    | TOKEN_ELIF
    | TOKEN_ELSE
    | TOKEN_THEN
    | TOKEN_IF
    | TOKEN_FUN
    | TOKEN_BREAK
    | TOKEN_MODULE
    | TOKEN_EXPORT
    | TOKEN_OPEN
    | TOKEN_END
    | TOKEN_RETURN
    | TOKEN_RECORD
    | TOKEN_STRING
    | TOKEN_ID
    | TOKEN_FLOAT
    | TOKEN_INT
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startstart
    | NONTERM_start
    | NONTERM_declaration_list
    | NONTERM_declaration
    | NONTERM_exports
    | NONTERM_exportsList
    | NONTERM_modulex
    | NONTERM_fundec
    | NONTERM_funargList
    | NONTERM_tycaplist
    | NONTERM_recorddec
    | NONTERM_recordList
    | NONTERM_uniondec
    | NONTERM_valueConList
    | NONTERM_valueCon
    | NONTERM_expr
    | NONTERM_caseClauseList
    | NONTERM_pattern
    | NONTERM_valConPatternList
    | NONTERM_recPatternList
    | NONTERM_elifList
    | NONTERM_beginExprList
    | NONTERM_callExprList
    | NONTERM_tyexpr
    | NONTERM_non_empty_tyexprList
    | NONTERM_tyexprList
    | NONTERM_module_qualifier

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | DOT  -> 1 
  | UNDERSCORE  -> 2 
  | FALSE  -> 3 
  | TRUE  -> 4 
  | UNIT  -> 5 
  | LTHENEQ  -> 6 
  | GTHENEQ  -> 7 
  | LTHEN  -> 8 
  | GTHEN  -> 9 
  | EQUAL  -> 10 
  | NOTEQUAL  -> 11 
  | SEMICOLON  -> 12 
  | COLON  -> 13 
  | TYPE  -> 14 
  | OF  -> 15 
  | CASE  -> 16 
  | TILDE  -> 17 
  | TICK  -> 18 
  | PIPE  -> 19 
  | AMPERSAND  -> 20 
  | OR  -> 21 
  | AND  -> 22 
  | NOT  -> 23 
  | DIVIDE  -> 24 
  | TIMES  -> 25 
  | MINUS  -> 26 
  | PLUS  -> 27 
  | MOD  -> 28 
  | COMMA  -> 29 
  | RCURLYBRACE  -> 30 
  | LCURLYBRACE  -> 31 
  | RBRACK  -> 32 
  | LBRACK  -> 33 
  | RPAREN  -> 34 
  | LPAREN  -> 35 
  | FOR  -> 36 
  | VAR  -> 37 
  | LET  -> 38 
  | DO  -> 39 
  | WHILE  -> 40 
  | ELIF  -> 41 
  | ELSE  -> 42 
  | THEN  -> 43 
  | IF  -> 44 
  | FUN  -> 45 
  | BREAK  -> 46 
  | MODULE  -> 47 
  | EXPORT  -> 48 
  | OPEN  -> 49 
  | END  -> 50 
  | RETURN  -> 51 
  | RECORD  -> 52 
  | STRING _ -> 53 
  | ID _ -> 54 
  | FLOAT _ -> 55 
  | INT _ -> 56 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_DOT 
  | 2 -> TOKEN_UNDERSCORE 
  | 3 -> TOKEN_FALSE 
  | 4 -> TOKEN_TRUE 
  | 5 -> TOKEN_UNIT 
  | 6 -> TOKEN_LTHENEQ 
  | 7 -> TOKEN_GTHENEQ 
  | 8 -> TOKEN_LTHEN 
  | 9 -> TOKEN_GTHEN 
  | 10 -> TOKEN_EQUAL 
  | 11 -> TOKEN_NOTEQUAL 
  | 12 -> TOKEN_SEMICOLON 
  | 13 -> TOKEN_COLON 
  | 14 -> TOKEN_TYPE 
  | 15 -> TOKEN_OF 
  | 16 -> TOKEN_CASE 
  | 17 -> TOKEN_TILDE 
  | 18 -> TOKEN_TICK 
  | 19 -> TOKEN_PIPE 
  | 20 -> TOKEN_AMPERSAND 
  | 21 -> TOKEN_OR 
  | 22 -> TOKEN_AND 
  | 23 -> TOKEN_NOT 
  | 24 -> TOKEN_DIVIDE 
  | 25 -> TOKEN_TIMES 
  | 26 -> TOKEN_MINUS 
  | 27 -> TOKEN_PLUS 
  | 28 -> TOKEN_MOD 
  | 29 -> TOKEN_COMMA 
  | 30 -> TOKEN_RCURLYBRACE 
  | 31 -> TOKEN_LCURLYBRACE 
  | 32 -> TOKEN_RBRACK 
  | 33 -> TOKEN_LBRACK 
  | 34 -> TOKEN_RPAREN 
  | 35 -> TOKEN_LPAREN 
  | 36 -> TOKEN_FOR 
  | 37 -> TOKEN_VAR 
  | 38 -> TOKEN_LET 
  | 39 -> TOKEN_DO 
  | 40 -> TOKEN_WHILE 
  | 41 -> TOKEN_ELIF 
  | 42 -> TOKEN_ELSE 
  | 43 -> TOKEN_THEN 
  | 44 -> TOKEN_IF 
  | 45 -> TOKEN_FUN 
  | 46 -> TOKEN_BREAK 
  | 47 -> TOKEN_MODULE 
  | 48 -> TOKEN_EXPORT 
  | 49 -> TOKEN_OPEN 
  | 50 -> TOKEN_END 
  | 51 -> TOKEN_RETURN 
  | 52 -> TOKEN_RECORD 
  | 53 -> TOKEN_STRING 
  | 54 -> TOKEN_ID 
  | 55 -> TOKEN_FLOAT 
  | 56 -> TOKEN_INT 
  | 59 -> TOKEN_end_of_input
  | 57 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startstart 
    | 1 -> NONTERM_start 
    | 2 -> NONTERM_declaration_list 
    | 3 -> NONTERM_declaration_list 
    | 4 -> NONTERM_declaration 
    | 5 -> NONTERM_declaration 
    | 6 -> NONTERM_declaration 
    | 7 -> NONTERM_declaration 
    | 8 -> NONTERM_declaration 
    | 9 -> NONTERM_exports 
    | 10 -> NONTERM_exportsList 
    | 11 -> NONTERM_exportsList 
    | 12 -> NONTERM_exportsList 
    | 13 -> NONTERM_modulex 
    | 14 -> NONTERM_fundec 
    | 15 -> NONTERM_fundec 
    | 16 -> NONTERM_funargList 
    | 17 -> NONTERM_funargList 
    | 18 -> NONTERM_funargList 
    | 19 -> NONTERM_tycaplist 
    | 20 -> NONTERM_tycaplist 
    | 21 -> NONTERM_tycaplist 
    | 22 -> NONTERM_tycaplist 
    | 23 -> NONTERM_recorddec 
    | 24 -> NONTERM_recorddec 
    | 25 -> NONTERM_recordList 
    | 26 -> NONTERM_recordList 
    | 27 -> NONTERM_recordList 
    | 28 -> NONTERM_uniondec 
    | 29 -> NONTERM_uniondec 
    | 30 -> NONTERM_valueConList 
    | 31 -> NONTERM_valueConList 
    | 32 -> NONTERM_valueCon 
    | 33 -> NONTERM_expr 
    | 34 -> NONTERM_expr 
    | 35 -> NONTERM_expr 
    | 36 -> NONTERM_expr 
    | 37 -> NONTERM_expr 
    | 38 -> NONTERM_expr 
    | 39 -> NONTERM_expr 
    | 40 -> NONTERM_expr 
    | 41 -> NONTERM_expr 
    | 42 -> NONTERM_expr 
    | 43 -> NONTERM_expr 
    | 44 -> NONTERM_expr 
    | 45 -> NONTERM_expr 
    | 46 -> NONTERM_expr 
    | 47 -> NONTERM_expr 
    | 48 -> NONTERM_expr 
    | 49 -> NONTERM_expr 
    | 50 -> NONTERM_expr 
    | 51 -> NONTERM_expr 
    | 52 -> NONTERM_expr 
    | 53 -> NONTERM_expr 
    | 54 -> NONTERM_expr 
    | 55 -> NONTERM_expr 
    | 56 -> NONTERM_expr 
    | 57 -> NONTERM_expr 
    | 58 -> NONTERM_expr 
    | 59 -> NONTERM_expr 
    | 60 -> NONTERM_expr 
    | 61 -> NONTERM_expr 
    | 62 -> NONTERM_expr 
    | 63 -> NONTERM_expr 
    | 64 -> NONTERM_expr 
    | 65 -> NONTERM_expr 
    | 66 -> NONTERM_expr 
    | 67 -> NONTERM_expr 
    | 68 -> NONTERM_expr 
    | 69 -> NONTERM_expr 
    | 70 -> NONTERM_expr 
    | 71 -> NONTERM_expr 
    | 72 -> NONTERM_caseClauseList 
    | 73 -> NONTERM_caseClauseList 
    | 74 -> NONTERM_pattern 
    | 75 -> NONTERM_pattern 
    | 76 -> NONTERM_pattern 
    | 77 -> NONTERM_pattern 
    | 78 -> NONTERM_pattern 
    | 79 -> NONTERM_pattern 
    | 80 -> NONTERM_valConPatternList 
    | 81 -> NONTERM_valConPatternList 
    | 82 -> NONTERM_valConPatternList 
    | 83 -> NONTERM_recPatternList 
    | 84 -> NONTERM_recPatternList 
    | 85 -> NONTERM_recPatternList 
    | 86 -> NONTERM_elifList 
    | 87 -> NONTERM_elifList 
    | 88 -> NONTERM_elifList 
    | 89 -> NONTERM_beginExprList 
    | 90 -> NONTERM_beginExprList 
    | 91 -> NONTERM_callExprList 
    | 92 -> NONTERM_callExprList 
    | 93 -> NONTERM_callExprList 
    | 94 -> NONTERM_tyexpr 
    | 95 -> NONTERM_tyexpr 
    | 96 -> NONTERM_tyexpr 
    | 97 -> NONTERM_tyexpr 
    | 98 -> NONTERM_non_empty_tyexprList 
    | 99 -> NONTERM_non_empty_tyexprList 
    | 100 -> NONTERM_tyexprList 
    | 101 -> NONTERM_tyexprList 
    | 102 -> NONTERM_tyexprList 
    | 103 -> NONTERM_module_qualifier 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 59 
let _fsyacc_tagOfErrorTerminal = 57

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | DOT  -> "DOT" 
  | UNDERSCORE  -> "UNDERSCORE" 
  | FALSE  -> "FALSE" 
  | TRUE  -> "TRUE" 
  | UNIT  -> "UNIT" 
  | LTHENEQ  -> "LTHENEQ" 
  | GTHENEQ  -> "GTHENEQ" 
  | LTHEN  -> "LTHEN" 
  | GTHEN  -> "GTHEN" 
  | EQUAL  -> "EQUAL" 
  | NOTEQUAL  -> "NOTEQUAL" 
  | SEMICOLON  -> "SEMICOLON" 
  | COLON  -> "COLON" 
  | TYPE  -> "TYPE" 
  | OF  -> "OF" 
  | CASE  -> "CASE" 
  | TILDE  -> "TILDE" 
  | TICK  -> "TICK" 
  | PIPE  -> "PIPE" 
  | AMPERSAND  -> "AMPERSAND" 
  | OR  -> "OR" 
  | AND  -> "AND" 
  | NOT  -> "NOT" 
  | DIVIDE  -> "DIVIDE" 
  | TIMES  -> "TIMES" 
  | MINUS  -> "MINUS" 
  | PLUS  -> "PLUS" 
  | MOD  -> "MOD" 
  | COMMA  -> "COMMA" 
  | RCURLYBRACE  -> "RCURLYBRACE" 
  | LCURLYBRACE  -> "LCURLYBRACE" 
  | RBRACK  -> "RBRACK" 
  | LBRACK  -> "LBRACK" 
  | RPAREN  -> "RPAREN" 
  | LPAREN  -> "LPAREN" 
  | FOR  -> "FOR" 
  | VAR  -> "VAR" 
  | LET  -> "LET" 
  | DO  -> "DO" 
  | WHILE  -> "WHILE" 
  | ELIF  -> "ELIF" 
  | ELSE  -> "ELSE" 
  | THEN  -> "THEN" 
  | IF  -> "IF" 
  | FUN  -> "FUN" 
  | BREAK  -> "BREAK" 
  | MODULE  -> "MODULE" 
  | EXPORT  -> "EXPORT" 
  | OPEN  -> "OPEN" 
  | END  -> "END" 
  | RETURN  -> "RETURN" 
  | RECORD  -> "RECORD" 
  | STRING _ -> "STRING" 
  | ID _ -> "ID" 
  | FLOAT _ -> "FLOAT" 
  | INT _ -> "INT" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | UNDERSCORE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | UNIT  -> (null : System.Object) 
  | LTHENEQ  -> (null : System.Object) 
  | GTHENEQ  -> (null : System.Object) 
  | LTHEN  -> (null : System.Object) 
  | GTHEN  -> (null : System.Object) 
  | EQUAL  -> (null : System.Object) 
  | NOTEQUAL  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | TYPE  -> (null : System.Object) 
  | OF  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | TILDE  -> (null : System.Object) 
  | TICK  -> (null : System.Object) 
  | PIPE  -> (null : System.Object) 
  | AMPERSAND  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | DIVIDE  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | RCURLYBRACE  -> (null : System.Object) 
  | LCURLYBRACE  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | VAR  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | ELIF  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | FUN  -> (null : System.Object) 
  | BREAK  -> (null : System.Object) 
  | MODULE  -> (null : System.Object) 
  | EXPORT  -> (null : System.Object) 
  | OPEN  -> (null : System.Object) 
  | END  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | RECORD  -> (null : System.Object) 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 3us; 4us; 2us; 65535us; 0us; 3us; 3us; 3us; 2us; 65535us; 0us; 6us; 3us; 6us; 2us; 65535us; 11us; 12us; 15us; 16us; 2us; 65535us; 0us; 5us; 3us; 5us; 2us; 65535us; 0us; 7us; 3us; 7us; 4us; 65535us; 22us; 23us; 30us; 31us; 37us; 38us; 180us; 181us; 5us; 65535us; 27us; 28us; 41us; 42us; 44us; 45us; 52us; 53us; 113us; 114us; 2us; 65535us; 0us; 8us; 3us; 8us; 3us; 65535us; 49us; 50us; 56us; 57us; 61us; 62us; 2us; 65535us; 0us; 9us; 3us; 9us; 3us; 65535us; 48us; 63us; 55us; 64us; 66us; 67us; 3us; 65535us; 48us; 65us; 55us; 65us; 66us; 65us; 44us; 65535us; 25us; 26us; 33us; 34us; 108us; 107us; 116us; 107us; 119us; 72us; 121us; 106us; 124us; 73us; 125us; 74us; 130us; 75us; 133us; 76us; 136us; 77us; 139us; 78us; 140us; 79us; 142us; 80us; 143us; 81us; 144us; 82us; 145us; 83us; 147us; 84us; 149us; 85us; 152us; 86us; 153us; 87us; 156us; 88us; 157us; 89us; 163us; 90us; 164us; 91us; 165us; 92us; 166us; 93us; 167us; 94us; 168us; 95us; 169us; 96us; 170us; 97us; 171us; 98us; 172us; 98us; 173us; 99us; 174us; 100us; 175us; 101us; 176us; 102us; 184us; 103us; 189us; 104us; 195us; 105us; 215us; 106us; 218us; 106us; 222us; 106us; 224us; 107us; 2us; 65535us; 172us; 196us; 190us; 191us; 5us; 65535us; 172us; 193us; 190us; 193us; 201us; 207us; 208us; 207us; 211us; 212us; 2us; 65535us; 201us; 202us; 208us; 209us; 2us; 65535us; 204us; 205us; 213us; 214us; 2us; 65535us; 74us; 127us; 219us; 221us; 4us; 65535us; 121us; 122us; 215us; 216us; 218us; 219us; 222us; 223us; 3us; 65535us; 108us; 109us; 116us; 117us; 224us; 225us; 18us; 65535us; 19us; 20us; 22us; 35us; 30us; 35us; 37us; 35us; 49us; 59us; 56us; 59us; 61us; 59us; 69us; 243us; 128us; 131us; 134us; 137us; 177us; 178us; 180us; 35us; 227us; 240us; 231us; 240us; 234us; 243us; 238us; 239us; 241us; 240us; 244us; 243us; 3us; 65535us; 227us; 228us; 231us; 232us; 241us; 242us; 3us; 65535us; 69us; 70us; 234us; 235us; 244us; 245us; 62us; 65535us; 19us; 226us; 22us; 226us; 25us; 155us; 30us; 226us; 33us; 155us; 37us; 226us; 49us; 226us; 56us; 226us; 61us; 226us; 69us; 226us; 108us; 155us; 116us; 155us; 119us; 155us; 121us; 155us; 124us; 155us; 125us; 155us; 128us; 226us; 130us; 155us; 133us; 155us; 134us; 226us; 136us; 155us; 139us; 155us; 140us; 155us; 142us; 155us; 143us; 155us; 144us; 155us; 145us; 155us; 147us; 155us; 149us; 155us; 152us; 155us; 153us; 155us; 156us; 155us; 157us; 155us; 163us; 155us; 164us; 155us; 165us; 155us; 166us; 155us; 167us; 155us; 168us; 155us; 169us; 155us; 170us; 155us; 171us; 155us; 172us; 155us; 173us; 155us; 174us; 155us; 175us; 155us; 176us; 155us; 177us; 226us; 180us; 226us; 184us; 155us; 189us; 155us; 195us; 155us; 215us; 155us; 218us; 155us; 222us; 155us; 224us; 155us; 227us; 226us; 231us; 226us; 234us; 226us; 238us; 226us; 241us; 226us; 244us; 226us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 12us; 15us; 18us; 21us; 26us; 32us; 35us; 39us; 42us; 46us; 50us; 95us; 98us; 104us; 107us; 110us; 113us; 118us; 122us; 141us; 145us; 149us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 2us; 2us; 3us; 1us; 2us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 7us; 1us; 8us; 1us; 9us; 1us; 9us; 1us; 9us; 1us; 9us; 2us; 10us; 11us; 1us; 10us; 1us; 10us; 1us; 13us; 1us; 13us; 2us; 14us; 15us; 2us; 14us; 15us; 2us; 14us; 15us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 17us; 14us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 15us; 17us; 15us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 2us; 16us; 17us; 2us; 16us; 17us; 1us; 16us; 1us; 16us; 2us; 19us; 21us; 2us; 19us; 21us; 1us; 19us; 1us; 19us; 2us; 20us; 22us; 1us; 20us; 1us; 20us; 4us; 23us; 24us; 28us; 29us; 4us; 23us; 24us; 28us; 29us; 2us; 23us; 28us; 1us; 23us; 1us; 23us; 1us; 23us; 2us; 24us; 29us; 2us; 24us; 29us; 2us; 24us; 29us; 2us; 24us; 29us; 1us; 24us; 1us; 24us; 1us; 24us; 2us; 25us; 26us; 2us; 25us; 26us; 1us; 25us; 1us; 25us; 1us; 28us; 1us; 29us; 2us; 30us; 31us; 1us; 30us; 1us; 30us; 1us; 32us; 1us; 32us; 1us; 32us; 1us; 32us; 17us; 33us; 35us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 18us; 33us; 35us; 37us; 38us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 18us; 33us; 35us; 37us; 38us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 33us; 35us; 39us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 33us; 35us; 40us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 33us; 35us; 41us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 33us; 35us; 42us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 33us; 35us; 43us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 33us; 35us; 44us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 33us; 35us; 44us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 33us; 35us; 44us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 33us; 35us; 44us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 33us; 35us; 45us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 33us; 35us; 45us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 33us; 35us; 46us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 33us; 35us; 46us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 33us; 35us; 48us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 33us; 35us; 49us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 33us; 35us; 53us; 54us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 33us; 35us; 53us; 54us; 55us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 33us; 35us; 53us; 54us; 55us; 56us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 62us; 63us; 64us; 65us; 66us; 17us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 63us; 64us; 65us; 66us; 17us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 64us; 65us; 66us; 17us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 65us; 66us; 17us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 66us; 17us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 17us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 18us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 72us; 73us; 18us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 89us; 90us; 18us; 33us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 91us; 92us; 1us; 33us; 1us; 33us; 1us; 33us; 7us; 34us; 43us; 68us; 76us; 78us; 79us; 103us; 4us; 34us; 43us; 68us; 103us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 35us; 1us; 35us; 1us; 36us; 1us; 36us; 1us; 36us; 2us; 37us; 38us; 2us; 37us; 38us; 1us; 37us; 1us; 38us; 2us; 39us; 40us; 4us; 39us; 95us; 97us; 103us; 1us; 39us; 1us; 40us; 1us; 40us; 1us; 40us; 2us; 41us; 42us; 4us; 41us; 95us; 97us; 103us; 1us; 41us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 43us; 1us; 44us; 1us; 44us; 1us; 44us; 1us; 44us; 1us; 44us; 1us; 44us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 47us; 1us; 48us; 1us; 49us; 1us; 50us; 1us; 51us; 1us; 52us; 1us; 53us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 2us; 62us; 72us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 67us; 1us; 67us; 1us; 67us; 1us; 67us; 1us; 67us; 1us; 67us; 1us; 67us; 1us; 69us; 2us; 69us; 74us; 1us; 70us; 2us; 70us; 75us; 1us; 71us; 1us; 71us; 1us; 71us; 1us; 71us; 2us; 72us; 73us; 2us; 72us; 73us; 2us; 72us; 73us; 1us; 72us; 1us; 74us; 1us; 75us; 3us; 76us; 78us; 79us; 1us; 77us; 1us; 78us; 1us; 78us; 1us; 78us; 1us; 79us; 1us; 79us; 1us; 79us; 2us; 80us; 81us; 1us; 80us; 1us; 80us; 2us; 83us; 84us; 2us; 83us; 84us; 2us; 83us; 84us; 1us; 83us; 1us; 83us; 1us; 86us; 1us; 86us; 1us; 86us; 2us; 87us; 88us; 2us; 87us; 88us; 1us; 87us; 1us; 88us; 1us; 89us; 1us; 89us; 1us; 91us; 1us; 91us; 1us; 94us; 1us; 94us; 1us; 94us; 1us; 94us; 3us; 95us; 97us; 103us; 1us; 95us; 1us; 95us; 1us; 95us; 1us; 96us; 1us; 96us; 1us; 96us; 1us; 96us; 1us; 96us; 1us; 96us; 2us; 98us; 99us; 1us; 98us; 1us; 98us; 2us; 100us; 101us; 1us; 100us; 1us; 100us; 1us; 103us; 1us; 103us; 1us; 103us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 9us; 11us; 13us; 15us; 17us; 19us; 21us; 23us; 25us; 27us; 29us; 32us; 34us; 36us; 38us; 40us; 43us; 46us; 49us; 51us; 53us; 55us; 57us; 75us; 77us; 79us; 81us; 83us; 85us; 87us; 89us; 107us; 110us; 113us; 115us; 117us; 120us; 123us; 125us; 127us; 130us; 132us; 134us; 139us; 144us; 147us; 149us; 151us; 153us; 156us; 159us; 162us; 165us; 167us; 169us; 171us; 174us; 177us; 179us; 181us; 183us; 185us; 188us; 190us; 192us; 194us; 196us; 198us; 200us; 218us; 237us; 256us; 274us; 292us; 310us; 328us; 346us; 364us; 382us; 400us; 418us; 436us; 454us; 472us; 490us; 508us; 526us; 544us; 562us; 580us; 598us; 616us; 634us; 652us; 670us; 688us; 706us; 724us; 742us; 760us; 778us; 796us; 815us; 834us; 853us; 855us; 857us; 859us; 867us; 872us; 874us; 876us; 878us; 880us; 882us; 884us; 886us; 888us; 890us; 892us; 894us; 897us; 900us; 902us; 904us; 907us; 912us; 914us; 916us; 918us; 920us; 923us; 928us; 930us; 932us; 934us; 936us; 938us; 940us; 942us; 944us; 946us; 948us; 950us; 952us; 954us; 956us; 958us; 960us; 962us; 964us; 966us; 968us; 970us; 972us; 974us; 976us; 978us; 980us; 982us; 984us; 986us; 988us; 990us; 992us; 994us; 996us; 998us; 1000us; 1003us; 1005us; 1007us; 1009us; 1011us; 1013us; 1015us; 1017us; 1019us; 1021us; 1023us; 1025us; 1027us; 1029us; 1032us; 1034us; 1037us; 1039us; 1041us; 1043us; 1045us; 1048us; 1051us; 1054us; 1056us; 1058us; 1060us; 1064us; 1066us; 1068us; 1070us; 1072us; 1074us; 1076us; 1078us; 1081us; 1083us; 1085us; 1088us; 1091us; 1094us; 1096us; 1098us; 1100us; 1102us; 1104us; 1107us; 1110us; 1112us; 1114us; 1116us; 1118us; 1120us; 1122us; 1124us; 1126us; 1128us; 1130us; 1134us; 1136us; 1138us; 1140us; 1142us; 1144us; 1146us; 1148us; 1150us; 1152us; 1155us; 1157us; 1159us; 1162us; 1164us; 1166us; 1168us; 1170us; |]
let _fsyacc_action_rows = 249
let _fsyacc_actionTableElements = [|4us; 32768us; 14us; 46us; 45us; 19us; 47us; 17us; 48us; 10us; 0us; 49152us; 0us; 16385us; 4us; 16387us; 14us; 46us; 45us; 19us; 47us; 17us; 48us; 10us; 0us; 16386us; 0us; 16388us; 0us; 16389us; 0us; 16390us; 0us; 16391us; 0us; 16392us; 1us; 32768us; 35us; 11us; 1us; 16396us; 54us; 14us; 1us; 32768us; 34us; 13us; 0us; 16393us; 1us; 16395us; 29us; 15us; 1us; 16396us; 54us; 14us; 0us; 16394us; 1us; 32768us; 54us; 18us; 0us; 16397us; 2us; 32768us; 35us; 234us; 54us; 230us; 1us; 32768us; 54us; 21us; 2us; 32768us; 8us; 27us; 35us; 22us; 2us; 16402us; 35us; 234us; 54us; 230us; 1us; 32768us; 34us; 24us; 1us; 32768us; 10us; 25us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 16us; 16398us; 1us; 161us; 6us; 174us; 7us; 173us; 8us; 176us; 9us; 175us; 19us; 171us; 20us; 170us; 21us; 169us; 22us; 168us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 33us; 119us; 35us; 108us; 2us; 32768us; 18us; 39us; 54us; 43us; 1us; 32768us; 9us; 29us; 1us; 32768us; 35us; 30us; 2us; 16402us; 35us; 234us; 54us; 230us; 1us; 32768us; 34us; 32us; 1us; 32768us; 10us; 33us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 16us; 16399us; 1us; 161us; 6us; 174us; 7us; 173us; 8us; 176us; 9us; 175us; 19us; 171us; 20us; 170us; 21us; 169us; 22us; 168us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 33us; 119us; 35us; 108us; 1us; 32768us; 54us; 36us; 1us; 16401us; 29us; 37us; 2us; 16402us; 35us; 234us; 54us; 230us; 0us; 16400us; 1us; 32768us; 54us; 40us; 1us; 16405us; 29us; 41us; 2us; 32768us; 18us; 39us; 54us; 43us; 0us; 16403us; 1us; 16406us; 29us; 44us; 2us; 32768us; 18us; 39us; 54us; 43us; 0us; 16404us; 1us; 32768us; 54us; 47us; 2us; 32768us; 8us; 52us; 10us; 48us; 2us; 32768us; 31us; 49us; 54us; 68us; 2us; 16411us; 35us; 234us; 54us; 230us; 1us; 32768us; 30us; 51us; 0us; 16407us; 2us; 32768us; 18us; 39us; 54us; 43us; 1us; 32768us; 9us; 54us; 1us; 32768us; 10us; 55us; 2us; 32768us; 31us; 56us; 54us; 68us; 2us; 16411us; 35us; 234us; 54us; 230us; 1us; 32768us; 30us; 58us; 0us; 16408us; 1us; 32768us; 54us; 60us; 1us; 16410us; 12us; 61us; 2us; 16411us; 35us; 234us; 54us; 230us; 0us; 16409us; 0us; 16412us; 0us; 16413us; 1us; 16415us; 19us; 66us; 1us; 32768us; 54us; 68us; 0us; 16414us; 1us; 32768us; 35us; 69us; 2us; 16486us; 35us; 234us; 54us; 230us; 1us; 32768us; 34us; 71us; 0us; 16416us; 17us; 32768us; 1us; 161us; 6us; 174us; 7us; 173us; 8us; 176us; 9us; 175us; 19us; 171us; 20us; 170us; 21us; 169us; 22us; 168us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 32us; 120us; 33us; 119us; 35us; 108us; 17us; 32768us; 1us; 161us; 6us; 174us; 7us; 173us; 8us; 176us; 9us; 175us; 19us; 171us; 20us; 170us; 21us; 169us; 22us; 168us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 33us; 119us; 35us; 108us; 43us; 125us; 19us; 32768us; 1us; 161us; 6us; 174us; 7us; 173us; 8us; 176us; 9us; 175us; 19us; 171us; 20us; 170us; 21us; 169us; 22us; 168us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 33us; 119us; 35us; 108us; 41us; 218us; 42us; 215us; 50us; 126us; 16us; 16423us; 1us; 161us; 6us; 174us; 7us; 173us; 8us; 176us; 9us; 175us; 19us; 171us; 20us; 170us; 21us; 169us; 22us; 168us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 33us; 119us; 35us; 108us; 16us; 16424us; 1us; 161us; 6us; 174us; 7us; 173us; 8us; 176us; 9us; 175us; 19us; 171us; 20us; 170us; 21us; 169us; 22us; 168us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 33us; 119us; 35us; 108us; 16us; 16425us; 1us; 161us; 6us; 174us; 7us; 173us; 8us; 176us; 9us; 175us; 19us; 171us; 20us; 170us; 21us; 169us; 22us; 168us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 33us; 119us; 35us; 108us; 16us; 16426us; 1us; 161us; 6us; 174us; 7us; 173us; 8us; 176us; 9us; 175us; 19us; 171us; 20us; 170us; 21us; 169us; 22us; 168us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 33us; 119us; 35us; 108us; 16us; 16427us; 1us; 161us; 6us; 174us; 7us; 173us; 8us; 176us; 9us; 175us; 19us; 171us; 20us; 170us; 21us; 169us; 22us; 168us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 33us; 119us; 35us; 108us; 17us; 32768us; 1us; 161us; 6us; 174us; 7us; 173us; 8us; 176us; 9us; 175us; 12us; 143us; 19us; 171us; 20us; 170us; 21us; 169us; 22us; 168us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 33us; 119us; 35us; 108us; 17us; 32768us; 1us; 161us; 6us; 174us; 7us; 173us; 8us; 176us; 9us; 175us; 12us; 144us; 19us; 171us; 20us; 170us; 21us; 169us; 22us; 168us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 33us; 119us; 35us; 108us; 17us; 32768us; 1us; 161us; 6us; 174us; 7us; 173us; 8us; 176us; 9us; 175us; 19us; 171us; 20us; 170us; 21us; 169us; 22us; 168us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 33us; 119us; 34us; 145us; 35us; 108us; 17us; 32768us; 1us; 161us; 6us; 174us; 7us; 173us; 8us; 176us; 9us; 175us; 19us; 171us; 20us; 170us; 21us; 169us; 22us; 168us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 33us; 119us; 35us; 108us; 50us; 146us; 17us; 32768us; 1us; 161us; 6us; 174us; 7us; 173us; 8us; 176us; 9us; 175us; 19us; 171us; 20us; 170us; 21us; 169us; 22us; 168us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 33us; 119us; 35us; 108us; 40us; 148us; 17us; 32768us; 1us; 161us; 6us; 174us; 7us; 173us; 8us; 176us; 9us; 175us; 19us; 171us; 20us; 170us; 21us; 169us; 22us; 168us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 33us; 119us; 34us; 150us; 35us; 108us; 17us; 32768us; 1us; 161us; 6us; 174us; 7us; 173us; 8us; 176us; 9us; 175us; 19us; 171us; 20us; 170us; 21us; 169us; 22us; 168us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 33us; 119us; 34us; 153us; 35us; 108us; 17us; 32768us; 1us; 161us; 6us; 174us; 7us; 173us; 8us; 176us; 9us; 175us; 19us; 171us; 20us; 170us; 21us; 169us; 22us; 168us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 33us; 119us; 35us; 108us; 50us; 154us; 3us; 16432us; 1us; 161us; 33us; 119us; 35us; 108us; 3us; 16433us; 1us; 161us; 33us; 119us; 35us; 108us; 7us; 16438us; 1us; 161us; 20us; 170us; 24us; 166us; 25us; 165us; 28us; 167us; 33us; 119us; 35us; 108us; 7us; 16439us; 1us; 161us; 20us; 170us; 24us; 166us; 25us; 165us; 28us; 167us; 33us; 119us; 35us; 108us; 3us; 16440us; 1us; 161us; 33us; 119us; 35us; 108us; 3us; 16441us; 1us; 161us; 33us; 119us; 35us; 108us; 3us; 16442us; 1us; 161us; 33us; 119us; 35us; 108us; 14us; 16443us; 1us; 161us; 6us; 174us; 7us; 173us; 8us; 176us; 9us; 175us; 19us; 171us; 20us; 170us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 33us; 119us; 35us; 108us; 14us; 16444us; 1us; 161us; 6us; 174us; 7us; 173us; 8us; 176us; 9us; 175us; 19us; 171us; 20us; 170us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 33us; 119us; 35us; 108us; 3us; 16445us; 1us; 161us; 33us; 119us; 35us; 108us; 7us; 16446us; 1us; 161us; 20us; 170us; 24us; 166us; 25us; 165us; 28us; 167us; 33us; 119us; 35us; 108us; 10us; 16447us; 1us; 161us; 19us; 171us; 20us; 170us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 33us; 119us; 35us; 108us; 10us; 16448us; 1us; 161us; 19us; 171us; 20us; 170us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 33us; 119us; 35us; 108us; 10us; 16449us; 1us; 161us; 19us; 171us; 20us; 170us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 33us; 119us; 35us; 108us; 10us; 16450us; 1us; 161us; 19us; 171us; 20us; 170us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 33us; 119us; 35us; 108us; 10us; 16451us; 1us; 161us; 19us; 171us; 20us; 170us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 33us; 119us; 35us; 108us; 17us; 32768us; 1us; 161us; 6us; 174us; 7us; 173us; 8us; 176us; 9us; 175us; 15us; 190us; 19us; 171us; 20us; 170us; 21us; 169us; 22us; 168us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 33us; 119us; 35us; 108us; 16us; 16457us; 1us; 161us; 6us; 174us; 7us; 173us; 8us; 176us; 9us; 175us; 19us; 172us; 20us; 170us; 21us; 169us; 22us; 168us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 33us; 119us; 35us; 108us; 17us; 16474us; 1us; 161us; 6us; 174us; 7us; 173us; 8us; 176us; 9us; 175us; 12us; 222us; 19us; 171us; 20us; 170us; 21us; 169us; 22us; 168us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 33us; 119us; 35us; 108us; 17us; 16476us; 1us; 161us; 6us; 174us; 7us; 173us; 8us; 176us; 9us; 175us; 19us; 171us; 20us; 170us; 21us; 169us; 22us; 168us; 24us; 166us; 25us; 165us; 26us; 164us; 27us; 163us; 28us; 167us; 29us; 224us; 33us; 119us; 35us; 108us; 17us; 16477us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 1us; 32768us; 34us; 110us; 0us; 16417us; 4us; 16452us; 10us; 16460us; 13us; 246us; 31us; 204us; 35us; 201us; 2us; 16452us; 10us; 140us; 13us; 246us; 2us; 32768us; 18us; 39us; 54us; 43us; 1us; 32768us; 9us; 115us; 1us; 32768us; 35us; 116us; 17us; 16477us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 1us; 32768us; 34us; 118us; 0us; 16418us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 0us; 16419us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 1us; 32768us; 34us; 123us; 0us; 16420us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 0us; 16421us; 0us; 16422us; 2us; 32768us; 35us; 234us; 54us; 129us; 3us; 16481us; 8us; 231us; 10us; 130us; 13us; 246us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 1us; 32768us; 54us; 132us; 1us; 32768us; 10us; 133us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 2us; 32768us; 35us; 234us; 54us; 135us; 3us; 16481us; 8us; 231us; 10us; 136us; 13us; 246us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 1us; 32768us; 54us; 138us; 1us; 32768us; 10us; 139us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 1us; 32768us; 35us; 142us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 0us; 16428us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 1us; 32768us; 35us; 149us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 0us; 16429us; 1us; 32768us; 35us; 152us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 0us; 16430us; 0us; 16431us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 0us; 16434us; 0us; 16435us; 0us; 16436us; 1us; 32768us; 54us; 162us; 0us; 16437us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 18us; 32768us; 2us; 200us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 111us; 55us; 188us; 56us; 186us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 2us; 32768us; 35us; 234us; 54us; 230us; 1us; 32768us; 54us; 179us; 1us; 32768us; 35us; 180us; 2us; 16402us; 35us; 234us; 54us; 230us; 1us; 32768us; 34us; 182us; 1us; 32768us; 26us; 183us; 1us; 32768us; 9us; 184us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 0us; 16453us; 1us; 16453us; 10us; 16458us; 0us; 16454us; 1us; 16454us; 10us; 16459us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 4us; 32768us; 2us; 200us; 54us; 199us; 55us; 198us; 56us; 197us; 1us; 32768us; 50us; 192us; 0us; 16455us; 1us; 32768us; 10us; 194us; 1us; 32768us; 9us; 195us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 0us; 16456us; 0us; 16458us; 0us; 16459us; 2us; 16460us; 31us; 204us; 35us; 201us; 0us; 16461us; 4us; 16466us; 2us; 200us; 54us; 199us; 55us; 198us; 56us; 197us; 1us; 32768us; 34us; 203us; 0us; 16462us; 1us; 16469us; 54us; 210us; 1us; 32768us; 30us; 206us; 0us; 16463us; 1us; 16465us; 29us; 208us; 4us; 16466us; 2us; 200us; 54us; 199us; 55us; 198us; 56us; 197us; 0us; 16464us; 1us; 32768us; 10us; 211us; 4us; 32768us; 2us; 200us; 54us; 199us; 55us; 198us; 56us; 197us; 1us; 16468us; 12us; 213us; 1us; 16469us; 54us; 210us; 0us; 16467us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 1us; 32768us; 50us; 217us; 0us; 16470us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 3us; 32768us; 41us; 218us; 42us; 215us; 50us; 220us; 0us; 16471us; 0us; 16472us; 17us; 32768us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 0us; 16473us; 17us; 16477us; 3us; 160us; 4us; 159us; 5us; 158us; 16us; 189us; 17us; 157us; 23us; 156us; 35us; 121us; 36us; 141us; 37us; 134us; 38us; 128us; 39us; 147us; 40us; 151us; 44us; 124us; 45us; 177us; 54us; 112us; 55us; 187us; 56us; 185us; 0us; 16475us; 1us; 32768us; 8us; 227us; 2us; 32768us; 35us; 234us; 54us; 230us; 1us; 32768us; 9us; 229us; 0us; 16478us; 2us; 16481us; 8us; 231us; 13us; 246us; 2us; 32768us; 35us; 234us; 54us; 230us; 1us; 32768us; 9us; 233us; 0us; 16479us; 2us; 16486us; 35us; 234us; 54us; 230us; 1us; 32768us; 34us; 236us; 1us; 32768us; 26us; 237us; 1us; 32768us; 9us; 238us; 2us; 32768us; 35us; 234us; 54us; 230us; 0us; 16480us; 1us; 16483us; 29us; 241us; 2us; 32768us; 35us; 234us; 54us; 230us; 0us; 16482us; 1us; 16485us; 29us; 244us; 2us; 16486us; 35us; 234us; 54us; 230us; 0us; 16484us; 1us; 32768us; 13us; 247us; 1us; 32768us; 54us; 248us; 0us; 16487us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 5us; 6us; 7us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 20us; 22us; 24us; 25us; 27us; 29us; 30us; 32us; 33us; 36us; 38us; 41us; 44us; 46us; 48us; 66us; 83us; 86us; 88us; 90us; 93us; 95us; 97us; 115us; 132us; 134us; 136us; 139us; 140us; 142us; 144us; 147us; 148us; 150us; 153us; 154us; 156us; 159us; 162us; 165us; 167us; 168us; 171us; 173us; 175us; 178us; 181us; 183us; 184us; 186us; 188us; 191us; 192us; 193us; 194us; 196us; 198us; 199us; 201us; 204us; 206us; 207us; 225us; 243us; 263us; 280us; 297us; 314us; 331us; 348us; 366us; 384us; 402us; 420us; 438us; 456us; 474us; 492us; 496us; 500us; 508us; 516us; 520us; 524us; 528us; 543us; 558us; 562us; 570us; 581us; 592us; 603us; 614us; 625us; 643us; 660us; 678us; 696us; 714us; 716us; 717us; 722us; 725us; 728us; 730us; 732us; 750us; 752us; 753us; 771us; 772us; 790us; 792us; 793us; 811us; 829us; 830us; 831us; 834us; 838us; 856us; 858us; 860us; 878us; 881us; 885us; 903us; 905us; 907us; 925us; 943us; 945us; 963us; 981us; 999us; 1017us; 1018us; 1036us; 1038us; 1056us; 1057us; 1059us; 1077us; 1095us; 1096us; 1097us; 1115us; 1133us; 1134us; 1135us; 1136us; 1138us; 1139us; 1157us; 1175us; 1193us; 1211us; 1229us; 1247us; 1265us; 1283us; 1301us; 1320us; 1338us; 1356us; 1374us; 1392us; 1395us; 1397us; 1399us; 1402us; 1404us; 1406us; 1408us; 1426us; 1427us; 1429us; 1430us; 1432us; 1450us; 1455us; 1457us; 1458us; 1460us; 1462us; 1480us; 1481us; 1482us; 1483us; 1486us; 1487us; 1492us; 1494us; 1495us; 1497us; 1499us; 1500us; 1502us; 1507us; 1508us; 1510us; 1515us; 1517us; 1519us; 1520us; 1538us; 1540us; 1541us; 1559us; 1563us; 1564us; 1565us; 1583us; 1584us; 1602us; 1603us; 1605us; 1608us; 1610us; 1611us; 1614us; 1617us; 1619us; 1620us; 1623us; 1625us; 1627us; 1629us; 1632us; 1633us; 1635us; 1638us; 1639us; 1641us; 1644us; 1645us; 1647us; 1649us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 4us; 3us; 1us; 0us; 2us; 8us; 11us; 4us; 2us; 0us; 4us; 3us; 2us; 1us; 6us; 9us; 4us; 2us; 0us; 4us; 7us; 3us; 1us; 4us; 4us; 7us; 4us; 3us; 5us; 5us; 4us; 5us; 4us; 5us; 3us; 10us; 6us; 6us; 1us; 2us; 2us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 9us; 1us; 1us; 1us; 5us; 6us; 4us; 1us; 1us; 1us; 1us; 4us; 4us; 3us; 1us; 0us; 5us; 3us; 0us; 3us; 3us; 3us; 3us; 1us; 3us; 1us; 0us; 4us; 4us; 6us; 1us; 3us; 1us; 3us; 1us; 0us; 4us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 4us; 5us; 5us; 5us; 6us; 7us; 7us; 8us; 8us; 8us; 9us; 9us; 9us; 9us; 10us; 10us; 11us; 11us; 11us; 12us; 12us; 13us; 13us; 14us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 18us; 19us; 19us; 19us; 20us; 20us; 20us; 21us; 21us; 22us; 22us; 22us; 23us; 23us; 23us; 23us; 24us; 24us; 25us; 25us; 25us; 26us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 16385us; 65535us; 16386us; 16388us; 16389us; 16390us; 16391us; 16392us; 65535us; 65535us; 65535us; 16393us; 65535us; 65535us; 16394us; 65535us; 16397us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16400us; 65535us; 65535us; 65535us; 16403us; 65535us; 65535us; 16404us; 65535us; 65535us; 65535us; 65535us; 65535us; 16407us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16408us; 65535us; 65535us; 65535us; 16409us; 16412us; 16413us; 65535us; 65535us; 16414us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 16419us; 65535us; 65535us; 16420us; 65535us; 65535us; 16421us; 16422us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16428us; 65535us; 65535us; 65535us; 16429us; 65535us; 65535us; 65535us; 16430us; 16431us; 65535us; 65535us; 16434us; 16435us; 16436us; 65535us; 16437us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16453us; 65535us; 16454us; 65535us; 65535us; 65535us; 65535us; 16455us; 65535us; 65535us; 65535us; 16456us; 16458us; 16459us; 65535us; 16461us; 65535us; 65535us; 16462us; 65535us; 65535us; 16463us; 65535us; 65535us; 16464us; 65535us; 65535us; 65535us; 65535us; 16467us; 65535us; 65535us; 16470us; 65535us; 65535us; 16471us; 16472us; 65535us; 16473us; 65535us; 16475us; 65535us; 65535us; 65535us; 16478us; 65535us; 65535us; 65535us; 16479us; 65535us; 65535us; 65535us; 65535us; 65535us; 16480us; 65535us; 65535us; 16482us; 65535us; 65535us; 16484us; 65535us; 65535us; 16487us; |]
let _fsyacc_reductions ()  =    [| 
# 530 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  Module )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startstart));
# 539 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'declaration_list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "Parser.fsy"
                                            Module _1 
                   )
# 82 "Parser.fsy"
                 :  Module ));
# 550 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'declaration)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'declaration_list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 85 "Parser.fsy"
                                                        _1 :: _2 
                   )
# 85 "Parser.fsy"
                 : 'declaration_list));
# 562 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'declaration)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "Parser.fsy"
                                                        [_1] 
                   )
# 86 "Parser.fsy"
                 : 'declaration_list));
# 573 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'modulex)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 89 "Parser.fsy"
                                      _1 
                   )
# 89 "Parser.fsy"
                 : 'declaration));
# 584 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'exports)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 "Parser.fsy"
                                     _1 
                   )
# 90 "Parser.fsy"
                 : 'declaration));
# 595 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fundec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "Parser.fsy"
                                     _1 
                   )
# 91 "Parser.fsy"
                 : 'declaration));
# 606 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recorddec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "Parser.fsy"
                                     _1 
                   )
# 92 "Parser.fsy"
                 : 'declaration));
# 617 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'uniondec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "Parser.fsy"
                                     _1 
                   )
# 93 "Parser.fsy"
                 : 'declaration));
# 628 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'exportsList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "Parser.fsy"
                                                            Export _3 
                   )
# 96 "Parser.fsy"
                 : 'exports));
# 639 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'exportsList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "Parser.fsy"
                                                 _1 :: _3 
                   )
# 99 "Parser.fsy"
                 : 'exportsList));
# 651 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "Parser.fsy"
                                                 [_1] 
                   )
# 100 "Parser.fsy"
                 : 'exportsList));
# 662 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "Parser.fsy"
                                                 [] 
                   )
# 101 "Parser.fsy"
                 : 'exportsList));
# 672 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "Parser.fsy"
                                                 Module _2 
                   )
# 104 "Parser.fsy"
                 : 'modulex));
# 683 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'funargList)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "Parser.fsy"
                                                                             FunctionDec {name=_3; template=None; clause=FunctionClause {arguments=_5; body=_8}; returnTy=_2 } 
                   )
# 107 "Parser.fsy"
                 : 'fundec));
# 697 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tycaplist)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'funargList)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "Parser.fsy"
                                                                                                   FunctionDec {name=_3; template=Some _5; clause=FunctionClause {arguments=_8; body=_11}; returnTy=_2}
                   )
# 108 "Parser.fsy"
                 : 'fundec));
# 712 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'funargList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "Parser.fsy"
                                                      (_1,_2) :: _4
                   )
# 111 "Parser.fsy"
                 : 'funargList));
# 725 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "Parser.fsy"
                                                      [(_1,_2)]
                   )
# 112 "Parser.fsy"
                 : 'funargList));
# 737 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "Parser.fsy"
                                                      []
                   )
# 113 "Parser.fsy"
                 : 'funargList));
# 747 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'tycaplist)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 "Parser.fsy"
                                                   match _4 with
                                                   | Template { tyVars=t; capacityVars=c } -> Template {tyVars=_2::t; capacityVars=c} 
                   )
# 116 "Parser.fsy"
                 : 'tycaplist));
# 760 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tycaplist)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "Parser.fsy"
                                                   match _3 with
                                                   | Template { tyVars=t; capacityVars=c } -> Template {tyVars=t; capacityVars=_1::c} 
                   )
# 118 "Parser.fsy"
                 : 'tycaplist));
# 773 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "Parser.fsy"
                                                   Template {tyVars=[_2]; capacityVars=[]} 
                   )
# 120 "Parser.fsy"
                 : 'tycaplist));
# 784 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "Parser.fsy"
                                                   Template {tyVars=[]; capacityVars=[_1]} 
                   )
# 121 "Parser.fsy"
                 : 'tycaplist));
# 795 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "Parser.fsy"
                                                                                                 ()
                   )
# 124 "Parser.fsy"
                 : 'recorddec));
# 807 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'tycaplist)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "Parser.fsy"
                                                                                                 ()
                   )
# 125 "Parser.fsy"
                 : 'recorddec));
# 820 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "Parser.fsy"
                                                          ()
                   )
# 128 "Parser.fsy"
                 : 'recordList));
# 833 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "Parser.fsy"
                                                          ()
                   )
# 129 "Parser.fsy"
                 : 'recordList));
# 845 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "Parser.fsy"
                                                          ()
                   )
# 130 "Parser.fsy"
                 : 'recordList));
# 855 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'valueConList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "Parser.fsy"
                                                                           ()
                   )
# 133 "Parser.fsy"
                 : 'uniondec));
# 867 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'tycaplist)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'valueConList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "Parser.fsy"
                                                                           ()
                   )
# 134 "Parser.fsy"
                 : 'uniondec));
# 880 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'valueCon)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'valueConList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "Parser.fsy"
                                                     ()
                   )
# 137 "Parser.fsy"
                 : 'valueConList));
# 892 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'valueCon)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "Parser.fsy"
                                                     ()
                   )
# 138 "Parser.fsy"
                 : 'valueConList));
# 903 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexprList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "Parser.fsy"
                                                      ()
                   )
# 141 "Parser.fsy"
                 : 'valueCon));
# 915 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'callExprList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "Parser.fsy"
                                                            ()
                   )
# 144 "Parser.fsy"
                 : 'expr));
# 927 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tycaplist)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'callExprList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "Parser.fsy"
                                                                              ()
                   )
# 145 "Parser.fsy"
                 : 'expr));
# 940 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "Parser.fsy"
                                                            ()
                   )
# 146 "Parser.fsy"
                 : 'expr));
# 952 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'beginExprList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "Parser.fsy"
                                                            ()
                   )
# 147 "Parser.fsy"
                 : 'expr));
# 963 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "Parser.fsy"
                                                            ()
                   )
# 148 "Parser.fsy"
                 : 'expr));
# 975 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'elifList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "Parser.fsy"
                                                            ()
                   )
# 149 "Parser.fsy"
                 : 'expr));
# 988 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "Parser.fsy"
                                                            ()
                   )
# 150 "Parser.fsy"
                 : 'expr));
# 1000 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "Parser.fsy"
                                                         ()
                   )
# 151 "Parser.fsy"
                 : 'expr));
# 1013 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "Parser.fsy"
                                                            ()
                   )
# 152 "Parser.fsy"
                 : 'expr));
# 1025 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "Parser.fsy"
                                                            ()
                   )
# 153 "Parser.fsy"
                 : 'expr));
# 1038 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "Parser.fsy"
                                                            ()
                   )
# 154 "Parser.fsy"
                 : 'expr));
# 1050 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "Parser.fsy"
                                                                                        ()
                   )
# 155 "Parser.fsy"
                 : 'expr));
# 1064 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "Parser.fsy"
                                                            ()
                   )
# 156 "Parser.fsy"
                 : 'expr));
# 1076 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "Parser.fsy"
                                                            ()
                   )
# 157 "Parser.fsy"
                 : 'expr));
# 1088 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'module_qualifier)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "Parser.fsy"
                                                            ()
                   )
# 158 "Parser.fsy"
                 : 'expr));
# 1099 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "Parser.fsy"
                                                            ()
                   )
# 159 "Parser.fsy"
                 : 'expr));
# 1110 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "Parser.fsy"
                                                            ()
                   )
# 160 "Parser.fsy"
                 : 'expr));
# 1121 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "Parser.fsy"
                                                            ()
                   )
# 161 "Parser.fsy"
                 : 'expr));
# 1131 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "Parser.fsy"
                                                            ()
                   )
# 162 "Parser.fsy"
                 : 'expr));
# 1141 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "Parser.fsy"
                                                            ()
                   )
# 163 "Parser.fsy"
                 : 'expr));
# 1151 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "Parser.fsy"
                                                            ()
                   )
# 164 "Parser.fsy"
                 : 'expr));
# 1163 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "Parser.fsy"
                                                            ()
                   )
# 165 "Parser.fsy"
                 : 'expr));
# 1175 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "Parser.fsy"
                                                            ()
                   )
# 166 "Parser.fsy"
                 : 'expr));
# 1187 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "Parser.fsy"
                                                            ()
                   )
# 167 "Parser.fsy"
                 : 'expr));
# 1199 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "Parser.fsy"
                                                            ()
                   )
# 168 "Parser.fsy"
                 : 'expr));
# 1211 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "Parser.fsy"
                                                            ()
                   )
# 169 "Parser.fsy"
                 : 'expr));
# 1223 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "Parser.fsy"
                                                            ()
                   )
# 170 "Parser.fsy"
                 : 'expr));
# 1235 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "Parser.fsy"
                                                            ()
                   )
# 171 "Parser.fsy"
                 : 'expr));
# 1247 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "Parser.fsy"
                                                            ()
                   )
# 172 "Parser.fsy"
                 : 'expr));
# 1259 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "Parser.fsy"
                                                            ()
                   )
# 173 "Parser.fsy"
                 : 'expr));
# 1271 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "Parser.fsy"
                                                            ()
                   )
# 174 "Parser.fsy"
                 : 'expr));
# 1283 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "Parser.fsy"
                                                            ()
                   )
# 175 "Parser.fsy"
                 : 'expr));
# 1295 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "Parser.fsy"
                                                            ()
                   )
# 176 "Parser.fsy"
                 : 'expr));
# 1307 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "Parser.fsy"
                                                            ()
                   )
# 177 "Parser.fsy"
                 : 'expr));
# 1319 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'funargList)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "Parser.fsy"
                                                                                  ()
                   )
# 178 "Parser.fsy"
                 : 'expr));
# 1333 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "Parser.fsy"
                                                            ()
                   )
# 179 "Parser.fsy"
                 : 'expr));
# 1344 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "Parser.fsy"
                                                            ()
                   )
# 180 "Parser.fsy"
                 : 'expr));
# 1355 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : float)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "Parser.fsy"
                                                            ()
                   )
# 181 "Parser.fsy"
                 : 'expr));
# 1366 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'caseClauseList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "Parser.fsy"
                                                            ()
                   )
# 182 "Parser.fsy"
                 : 'expr));
# 1378 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'caseClauseList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "Parser.fsy"
                                                                       ()
                   )
# 185 "Parser.fsy"
                 : 'caseClauseList));
# 1391 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "Parser.fsy"
                                                                       ()
                   )
# 186 "Parser.fsy"
                 : 'caseClauseList));
# 1403 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "Parser.fsy"
                                                                    ()
                   )
# 189 "Parser.fsy"
                 : 'pattern));
# 1414 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : float)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "Parser.fsy"
                                                                    ()
                   )
# 190 "Parser.fsy"
                 : 'pattern));
# 1425 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "Parser.fsy"
                                                                    ()
                   )
# 191 "Parser.fsy"
                 : 'pattern));
# 1436 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "Parser.fsy"
                                                                    ()
                   )
# 192 "Parser.fsy"
                 : 'pattern));
# 1446 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'valConPatternList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "Parser.fsy"
                                                                    ()
                   )
# 193 "Parser.fsy"
                 : 'pattern));
# 1458 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recPatternList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "Parser.fsy"
                                                                    ()
                   )
# 194 "Parser.fsy"
                 : 'pattern));
# 1470 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'valConPatternList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "Parser.fsy"
                                                          ()
                   )
# 197 "Parser.fsy"
                 : 'valConPatternList));
# 1482 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "Parser.fsy"
                                                          ()
                   )
# 198 "Parser.fsy"
                 : 'valConPatternList));
# 1493 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "Parser.fsy"
                                                          ()
                   )
# 199 "Parser.fsy"
                 : 'valConPatternList));
# 1503 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'pattern)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recPatternList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "Parser.fsy"
                                                                    ()
                   )
# 202 "Parser.fsy"
                 : 'recPatternList));
# 1516 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'pattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "Parser.fsy"
                                                                    ()
                   )
# 203 "Parser.fsy"
                 : 'recPatternList));
# 1528 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "Parser.fsy"
                                                                    ()
                   )
# 204 "Parser.fsy"
                 : 'recPatternList));
# 1538 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'beginExprList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "Parser.fsy"
                                                       ()
                   )
# 207 "Parser.fsy"
                 : 'elifList));
# 1549 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'beginExprList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "Parser.fsy"
                                                       ()
                   )
# 208 "Parser.fsy"
                 : 'elifList));
# 1560 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'beginExprList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'elifList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "Parser.fsy"
                                                      ()
                   )
# 209 "Parser.fsy"
                 : 'elifList));
# 1572 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'beginExprList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "Parser.fsy"
                                                       ()
                   )
# 212 "Parser.fsy"
                 : 'beginExprList));
# 1584 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "Parser.fsy"
                                                       ()
                   )
# 213 "Parser.fsy"
                 : 'beginExprList));
# 1595 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'callExprList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "Parser.fsy"
                                                  ()
                   )
# 216 "Parser.fsy"
                 : 'callExprList));
# 1607 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "Parser.fsy"
                                                  ()
                   )
# 217 "Parser.fsy"
                 : 'callExprList));
# 1618 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "Parser.fsy"
                                                  ()
                   )
# 218 "Parser.fsy"
                 : 'callExprList));
# 1628 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'module_qualifier)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'non_empty_tyexprList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 221 "Parser.fsy"
                                                                            ()
                   )
# 221 "Parser.fsy"
                 : 'tyexpr));
# 1640 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'non_empty_tyexprList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 222 "Parser.fsy"
                                                                            ()
                   )
# 222 "Parser.fsy"
                 : 'tyexpr));
# 1652 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexprList)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "Parser.fsy"
                                                                            ()
                   )
# 223 "Parser.fsy"
                 : 'tyexpr));
# 1664 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "Parser.fsy"
                                                                            ()
                   )
# 224 "Parser.fsy"
                 : 'tyexpr));
# 1675 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'non_empty_tyexprList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 "Parser.fsy"
                                                            ()
                   )
# 227 "Parser.fsy"
                 : 'non_empty_tyexprList));
# 1687 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "Parser.fsy"
                                                            ()
                   )
# 228 "Parser.fsy"
                 : 'non_empty_tyexprList));
# 1698 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexprList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 "Parser.fsy"
                                                  ()
                   )
# 231 "Parser.fsy"
                 : 'tyexprList));
# 1710 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyexpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 232 "Parser.fsy"
                                                  ()
                   )
# 232 "Parser.fsy"
                 : 'tyexprList));
# 1721 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 233 "Parser.fsy"
                                                  ()
                   )
# 233 "Parser.fsy"
                 : 'tyexprList));
# 1731 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 "Parser.fsy"
                                            ()
                   )
# 236 "Parser.fsy"
                 : 'module_qualifier));
|]
# 1744 "Parser.fs"
let tables () : Microsoft.FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Microsoft.FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 60;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let start lexer lexbuf :  Module  =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
