module BlinkSimple
open(Prelude, Io, Time)

/* In this example we have two LEDs blinking at different rates */

let boardLedA : uint16 = 13
let boardLedB : uint16 = 9

let mut timerStateA = Time:state
let mut timerStateB = Time:state

let mut ledStateA = low()
let mut ledStateB = low()

fun blink(interval, pin, inout timerState, inout ledState) =
    Time:every(interval, inout timerState) |>
    Signal:toggle(low(), high(), inout ledState) |>
    Io:digOut(pin)

fun loop() = {
    blink(1000, boardLedA, inout timerStateA, inout ledStateA)
    blink(700, boardLedB, inout timerStateB, inout ledStateB)
}

fun setup() = {
    Io:setPinMode(boardLedA, Io:output())
    Io:setPinMode(boardLedB, Io:output())
}