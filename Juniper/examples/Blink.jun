module Blink
open(Prelude, Io, Time)

let boardLed : int16 = 13

let tState : timerState ref = Time:state()
let ledState : pinState ref = ref low()

fun blink() : unit = (
    let timerSig = Time:every(1000, tState);
    let ledSig =
        Signal:foldP<uint32, pinState>(
            fn (currentTime : uint32, lastState : pinState) : pinState ->
                Io:toggle(lastState)
            end,
            ledState, timerSig);
    Io:digOut(boardLed, ledSig)
)

fun setup() : unit =
    Io:setPinMode(boardLed, Io:output())

fun main() : unit = (
    setup();
    while true do
        blink()
    end
)
