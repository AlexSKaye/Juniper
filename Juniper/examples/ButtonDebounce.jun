module ButtonDebounce
open(Prelude, Button, Io)

let buttonPin : uint16 = 2
let ledPin : uint16 = 13

let mut bState = Button:state
let mut edgeState = Io:low()
let mut ledState = Io:high()

fun loop() = {
    let buttonSig = Io:digIn(buttonPin)
    let debouncedSig = Io:fallingEdge(Button:debounce(buttonSig, inout bState), inout edgeState)
    let ledSig =
        Signal:foldP(
            (event, currentLedState) =>
                Io:toggle(currentLedState),
            inout ledState, debouncedSig)
    Io:digOut(ledPin, ledSig)
}

fun setup() = {
    Io:setPinMode(ledPin, Io:output())
    Io:setPinMode(buttonPin, Io:input())
    Io:digWrite(ledPin, ledState)
}