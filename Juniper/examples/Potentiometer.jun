module Potentiometer
open(Prelude, Time, Io)

let potPin : uint16 = 2
let ledPin : uint16 = 13

fun setup() : unit = 
    Io:setPinMode(ledPin, Io:output())

let timeState : timerState ref = Time:state()
let ledState : pinState ref = ref low()

fun potentiometer() : unit = (
	let potValue = Io:anaRead(potPin);
	let timeSignal = Time:every(100, timeState);
	let ledSignal =
		Signal:foldP<uint32, pinState>(fn (currentTime : uint32, lastState : pinState) : pinState ->
        	Io:otherPinState(lastState),
            ledState, timeSignal);
	Signal:sink<pinState>(fn (ledVal : pinState) : unit ->
		Io:digWrite(ledPin, ledVal)
	, ledSignal)
)

fun main() : unit = (
    setup();
    while true do (
        potentiometer();
        Time:sleep(50)
    ) end
)